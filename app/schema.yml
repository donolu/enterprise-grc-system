openapi: 3.0.3
info:
  title: GRC SaaS API
  version: 1.0.0
  description: "\n    Comprehensive API for Governance, Risk, and Compliance (GRC)\
    \ management.\n    \n    This API provides complete functionality for compliance\
    \ framework management,\n    control assessments, evidence collection, reporting,\
    \ and automated reminders.\n    \n    ## Features\n    - **Framework Management**:\
    \ Import and manage compliance frameworks (ISO 27001, NIST CSF, SOC 2, etc.)\n\
    \    - **Assessment Workflow**: Complete control assessment lifecycle with status\
    \ tracking\n    - **Evidence Management**: Upload, link, and organize evidence\
    \ with bulk operations\n    - **Automated Reporting**: Generate professional PDF\
    \ reports for audits and compliance\n    - **Smart Reminders**: Configurable email\
    \ notifications for due dates and overdue items\n    - **Multi-tenant Architecture**:\
    \ Complete tenant isolation with secure data scoping\n    \n    ## Authentication\n\
    \    This API uses session-based authentication. Users must be authenticated to\
    \ access endpoints.\n    \n    ## Tenant Scoping\n    All data is automatically\
    \ scoped to the authenticated user's tenant. Cross-tenant access is prevented.\n\
    \    "
  contact:
    name: GRC SaaS Support
    email: support@grcsaas.com
  license:
    name: Proprietary
paths:
  /api/auth/register/:
    post:
      operationId: auth_register_create
      description: Create a new user account with email, username, and password. Account
        will be associated with the current tenant.
      summary: Register new user
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      - {}
      responses:
        '201':
          description: User created successfully
        '400':
          description: Validation errors (username taken, weak password, etc.)
  /api/auth/login/:
    post:
      operationId: auth_login_create
      description: Authenticate user with credentials. If 2FA is enabled, returns
        2FA challenge instead of session.
      summary: User login
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      - {}
      responses:
        '200':
          description: Login successful or 2FA challenge sent
        '400':
          description: Invalid credentials
  /api/auth/logout/:
    post:
      operationId: auth_logout_create
      tags:
      - auth
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/profile/:
    get:
      operationId: auth_profile_retrieve
      tags:
      - auth
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: auth_profile_partial_update
      tags:
      - auth
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/change-password/:
    post:
      operationId: auth_change_password_create
      tags:
      - auth
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/me/:
    get:
      operationId: auth_me_retrieve
      description: Retrieve the profile information of the currently authenticated
        user.
      summary: Get current user profile
      tags:
      - Authentication
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
        '401':
          description: Authentication required
  /api/auth/2fa/status/:
    get:
      operationId: auth_2fa_status_retrieve
      description: Get comprehensive 2FA status for current user
      tags:
      - auth
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/2fa/enable/:
    post:
      operationId: auth_2fa_enable_create
      description: Enable 2FA for current user - supports email, TOTP, and push
      tags:
      - auth
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/2fa/disable/:
    post:
      operationId: auth_2fa_disable_create
      description: Disable 2FA methods for current user
      tags:
      - auth
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/2fa/verify/:
    post:
      operationId: auth_2fa_verify_create
      description: Complete login by verifying the 2FA code received via email, TOTP
        app, or push notification.
      summary: Verify 2FA code
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOTPRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyOTPRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyOTPRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      - {}
      responses:
        '200':
          description: 2FA verification successful, login complete
        '400':
          description: Invalid or expired 2FA code
  /api/auth/2fa/setup-totp/:
    post:
      operationId: auth_2fa_setup_totp_create
      description: Generate QR code for TOTP setup using enhanced pyotp service
      tags:
      - auth
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/2fa/confirm-totp/:
    post:
      operationId: auth_2fa_confirm_totp_create
      description: Confirm TOTP setup with verification code using enhanced service
      tags:
      - auth
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/2fa/register-push/:
    post:
      operationId: auth_2fa_register_push_create
      description: Register a new push notification device
      tags:
      - auth
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/2fa/approve-push/:
    post:
      operationId: auth_2fa_approve_push_create
      description: Approve or deny a push notification challenge
      tags:
      - auth
      security:
      - cookieAuth: []
      - SessionAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/2fa/preferences/:
    get:
      operationId: auth_2fa_preferences_retrieve
      description: Get user 2FA preferences
      tags:
      - auth
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: auth_2fa_preferences_create
      description: Update user 2FA preferences
      tags:
      - auth
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: No response body
  /api/catalogs/api/frameworks/:
    post:
      operationId: catalogs_api_frameworks_create
      description: Create a new compliance framework with all required metadata and
        configuration.
      summary: Create new compliance framework
      tags:
      - Frameworks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrameworkDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FrameworkDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FrameworkDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkDetail'
          description: ''
    get:
      operationId: catalogs_api_frameworks_list
      description: Retrieve a paginated list of compliance frameworks with filtering,
        searching, and ordering capabilities.
      summary: List compliance frameworks
      parameters:
      - in: query
        name: active_only
        schema:
          type: boolean
        description: Show only active frameworks
      - in: query
        name: framework_type
        schema:
          type: string
        description: Filter by framework type (iso27001, nist_csf, soc2, etc.)
      - in: query
        name: is_mandatory
        schema:
          type: boolean
        description: Filter by mandatory status
      - in: query
        name: ordering
        schema:
          type: string
        description: 'Order by: name, version, effective_date, created_at (prefix
          with - for descending)'
      - in: query
        name: search
        schema:
          type: string
        description: Search across name, short_name, description, and issuing_organization
      - in: query
        name: status
        schema:
          type: string
        description: Filter by framework status (active, draft, archived)
      tags:
      - Frameworks
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FrameworkList'
              examples:
                ListActiveFrameworks:
                  value:
                  - ?framework_type=iso27001&status=active
                  summary: Get active ISO 27001 frameworks
                  description: Example of filtering for active ISO 27001 frameworks
          description: ''
  /api/catalogs/api/frameworks/{id}/:
    patch:
      operationId: catalogs_api_frameworks_partial_update
      description: Update specific fields of an existing compliance framework.
      summary: Partially update framework
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this framework.
        required: true
      tags:
      - Frameworks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFrameworkDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFrameworkDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFrameworkDetailRequest'
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkDetail'
          description: ''
    delete:
      operationId: catalogs_api_frameworks_destroy
      description: Delete a compliance framework. This will also remove all associated
        clauses and mappings.
      summary: Delete framework
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this framework.
        required: true
      tags:
      - Frameworks
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '204':
          description: No response body
    put:
      operationId: catalogs_api_frameworks_update
      description: Update an existing compliance framework. Requires all fields.
      summary: Update framework
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this framework.
        required: true
      tags:
      - Frameworks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrameworkDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FrameworkDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FrameworkDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkDetail'
          description: ''
    get:
      operationId: catalogs_api_frameworks_retrieve
      description: Retrieve detailed information about a specific compliance framework
        including metadata and configuration.
      summary: Get framework details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this framework.
        required: true
      tags:
      - Frameworks
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkDetail'
          description: ''
  /api/catalogs/api/frameworks/{id}/clauses/:
    get:
      operationId: catalogs_api_frameworks_clauses_list
      description: Retrieve all clauses associated with a specific framework with
        optional filtering by clause type and criticality.
      summary: Get framework clauses
      parameters:
      - in: query
        name: clause_type
        schema:
          type: string
        description: Filter by clause type (control, guidance, requirement, etc.)
      - in: query
        name: criticality
        schema:
          type: string
        description: Filter by criticality level (low, medium, high, critical)
      - in: query
        name: framework_type
        schema:
          type: string
          enum:
          - custom
          - financial
          - industry
          - operational
          - privacy
          - security
        description: |-
          * `security` - Security Framework
          * `privacy` - Privacy Framework
          * `financial` - Financial Framework
          * `operational` - Operational Framework
          * `industry` - Industry-Specific Framework
          * `custom` - Custom Framework
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this framework.
        required: true
      - in: query
        name: is_mandatory
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - archived
          - deprecated
          - draft
        description: |-
          * `draft` - Draft
          * `active` - Active
          * `deprecated` - Deprecated
          * `archived` - Archived
      tags:
      - Frameworks
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClauseList'
          description: ''
        '404':
          description: Framework not found
  /api/catalogs/api/frameworks/{id}/controls/:
    get:
      operationId: catalogs_api_frameworks_controls_list
      description: Retrieve all controls mapped to a specific framework through clause
        relationships.
      summary: Get framework controls
      parameters:
      - in: query
        name: framework_type
        schema:
          type: string
          enum:
          - custom
          - financial
          - industry
          - operational
          - privacy
          - security
        description: |-
          * `security` - Security Framework
          * `privacy` - Privacy Framework
          * `financial` - Financial Framework
          * `operational` - Operational Framework
          * `industry` - Industry-Specific Framework
          * `custom` - Custom Framework
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this framework.
        required: true
      - in: query
        name: is_mandatory
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - archived
          - deprecated
          - draft
        description: |-
          * `draft` - Draft
          * `active` - Active
          * `deprecated` - Deprecated
          * `archived` - Archived
      tags:
      - Frameworks
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ControlList'
          description: ''
        '404':
          description: Framework not found
  /api/catalogs/api/frameworks/{id}/stats/:
    get:
      operationId: catalogs_api_frameworks_stats_retrieve
      description: Retrieve comprehensive statistics for a specific framework including
        clause counts, control distribution, and testing status.
      summary: Get framework statistics
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this framework.
        required: true
      tags:
      - Frameworks
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: Framework statistics
        '404':
          description: Framework not found
  /api/catalogs/api/clauses/:
    post:
      operationId: catalogs_api_clauses_create
      description: |-
        ViewSet for managing framework clauses.
        Provides CRUD operations and clause-specific endpoints.
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClauseDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClauseDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClauseDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClauseDetail'
          description: ''
    get:
      operationId: catalogs_api_clauses_list
      description: |-
        ViewSet for managing framework clauses.
        Provides CRUD operations and clause-specific endpoints.
      parameters:
      - in: query
        name: clause_type
        schema:
          type: string
          enum:
          - assessment
          - control
          - documentation
          - monitoring
          - policy
          - procedure
          - reporting
        description: |-
          * `control` - Control Requirement
          * `policy` - Policy Requirement
          * `procedure` - Procedure Requirement
          * `documentation` - Documentation Requirement
          * `assessment` - Assessment Requirement
          * `monitoring` - Monitoring Requirement
          * `reporting` - Reporting Requirement
      - in: query
        name: criticality
        schema:
          type: string
          enum:
          - critical
          - high
          - low
          - medium
        description: |-
          * `low` - Low
          * `medium` - Medium
          * `high` - High
          * `critical` - Critical
      - in: query
        name: framework
        schema:
          type: integer
      - in: query
        name: is_testable
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: parent_clause
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClauseList'
          description: ''
  /api/catalogs/api/clauses/{id}/:
    patch:
      operationId: catalogs_api_clauses_partial_update
      description: |-
        ViewSet for managing framework clauses.
        Provides CRUD operations and clause-specific endpoints.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this clause.
        required: true
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClauseDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClauseDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClauseDetailRequest'
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClauseDetail'
          description: ''
    delete:
      operationId: catalogs_api_clauses_destroy
      description: |-
        ViewSet for managing framework clauses.
        Provides CRUD operations and clause-specific endpoints.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this clause.
        required: true
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '204':
          description: No response body
    put:
      operationId: catalogs_api_clauses_update
      description: |-
        ViewSet for managing framework clauses.
        Provides CRUD operations and clause-specific endpoints.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this clause.
        required: true
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClauseDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClauseDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClauseDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClauseDetail'
          description: ''
    get:
      operationId: catalogs_api_clauses_retrieve
      description: |-
        ViewSet for managing framework clauses.
        Provides CRUD operations and clause-specific endpoints.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this clause.
        required: true
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClauseDetail'
          description: ''
  /api/catalogs/api/clauses/{id}/controls/:
    get:
      operationId: catalogs_api_clauses_controls_retrieve
      description: Get all controls mapped to a specific clause.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this clause.
        required: true
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClauseDetail'
          description: ''
  /api/catalogs/api/clauses/{id}/subclauses/:
    get:
      operationId: catalogs_api_clauses_subclauses_retrieve
      description: Get all subclauses for a specific clause.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this clause.
        required: true
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClauseDetail'
          description: ''
  /api/catalogs/api/controls/:
    post:
      operationId: catalogs_api_controls_create
      description: |-
        ViewSet for managing controls.
        Provides CRUD operations and control-specific endpoints.
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ControlCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ControlCreateUpdateRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlCreateUpdate'
          description: ''
    get:
      operationId: catalogs_api_controls_list
      description: |-
        ViewSet for managing controls.
        Provides CRUD operations and control-specific endpoints.
      parameters:
      - in: query
        name: automation_level
        schema:
          type: string
          enum:
          - automated
          - continuous
          - manual
          - semi_automated
        description: |-
          * `manual` - Manual Control
          * `semi_automated` - Semi-Automated Control
          * `automated` - Automated Control
          * `continuous` - Continuous Monitoring
      - in: query
        name: control_owner
        schema:
          type: integer
      - in: query
        name: control_type
        schema:
          type: string
          enum:
          - administrative
          - compensating
          - corrective
          - detective
          - physical
          - preventive
          - technical
        description: |-
          * `preventive` - Preventive Control
          * `detective` - Detective Control
          * `corrective` - Corrective Control
          * `compensating` - Compensating Control
          * `administrative` - Administrative Control
          * `technical` - Technical Control
          * `physical` - Physical Control
      - in: query
        name: effectiveness_rating
        schema:
          type: string
          enum:
          - fully_effective
          - largely_effective
          - not_effective
          - partially_effective
        description: |-
          Current effectiveness assessment

          * `not_effective` - Not Effective
          * `partially_effective` - Partially Effective
          * `largely_effective` - Largely Effective
          * `fully_effective` - Fully Effective
      - in: query
        name: last_test_result
        schema:
          type: string
          enum:
          - fully_effective
          - largely_effective
          - not_effective
          - partially_effective
        description: |-
          * `not_effective` - Not Effective
          * `partially_effective` - Partially Effective
          * `largely_effective` - Largely Effective
          * `fully_effective` - Fully Effective
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: risk_rating
        schema:
          type: string
          enum:
          - critical
          - high
          - low
          - medium
        description: |-
          Risk level if this control fails

          * `low` - Low
          * `medium` - Medium
          * `high` - High
          * `critical` - Critical
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - disabled
          - implemented
          - in_progress
          - planned
          - remediation
          - retired
          - testing
        description: |-
          * `planned` - Planned
          * `in_progress` - In Progress
          * `implemented` - Implemented
          * `testing` - Under Testing
          * `active` - Active
          * `remediation` - Needs Remediation
          * `disabled` - Disabled
          * `retired` - Retired
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ControlList'
          description: ''
  /api/catalogs/api/controls/by_effectiveness/:
    get:
      operationId: catalogs_api_controls_by_effectiveness_retrieve
      description: Get controls grouped by effectiveness rating.
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlDetail'
          description: ''
  /api/catalogs/api/controls/needing_testing/:
    get:
      operationId: catalogs_api_controls_needing_testing_retrieve
      description: Get all controls that need testing.
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlDetail'
          description: ''
  /api/catalogs/api/controls/{id}/:
    patch:
      operationId: catalogs_api_controls_partial_update
      description: |-
        ViewSet for managing controls.
        Provides CRUD operations and control-specific endpoints.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control.
        required: true
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedControlCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedControlCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedControlCreateUpdateRequest'
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlCreateUpdate'
          description: ''
    delete:
      operationId: catalogs_api_controls_destroy
      description: |-
        ViewSet for managing controls.
        Provides CRUD operations and control-specific endpoints.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control.
        required: true
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '204':
          description: No response body
    put:
      operationId: catalogs_api_controls_update
      description: |-
        ViewSet for managing controls.
        Provides CRUD operations and control-specific endpoints.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control.
        required: true
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ControlCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ControlCreateUpdateRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlCreateUpdate'
          description: ''
    get:
      operationId: catalogs_api_controls_retrieve
      description: |-
        ViewSet for managing controls.
        Provides CRUD operations and control-specific endpoints.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control.
        required: true
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlDetail'
          description: ''
  /api/catalogs/api/controls/{id}/evidence/:
    get:
      operationId: catalogs_api_controls_evidence_retrieve
      description: Get all evidence for a specific control.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control.
        required: true
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlDetail'
          description: ''
  /api/catalogs/api/controls/{id}/update_testing/:
    post:
      operationId: catalogs_api_controls_update_testing_create
      description: Update control testing results.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control.
        required: true
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ControlDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ControlDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlDetail'
          description: ''
  /api/catalogs/api/evidence/:
    post:
      operationId: catalogs_api_evidence_create
      description: ViewSet for managing control evidence.
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlEvidenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ControlEvidenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ControlEvidenceRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlEvidence'
          description: ''
    get:
      operationId: catalogs_api_evidence_list
      description: ViewSet for managing control evidence.
      parameters:
      - in: query
        name: collected_by
        schema:
          type: integer
      - in: query
        name: control
        schema:
          type: integer
      - in: query
        name: evidence_type
        schema:
          type: string
          enum:
          - approval
          - certificate
          - document
          - log_file
          - meeting_notes
          - other
          - report
          - screenshot
          - test_result
        description: |-
          * `document` - Document/Policy
          * `screenshot` - Screenshot
          * `log_file` - Log File
          * `report` - Report
          * `certificate` - Certificate
          * `approval` - Approval/Sign-off
          * `test_result` - Test Result
          * `meeting_notes` - Meeting Notes
          * `other` - Other
      - in: query
        name: is_validated
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ControlEvidence'
          description: ''
  /api/catalogs/api/evidence/{id}/:
    patch:
      operationId: catalogs_api_evidence_partial_update
      description: ViewSet for managing control evidence.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control evidence.
        required: true
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedControlEvidenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedControlEvidenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedControlEvidenceRequest'
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlEvidence'
          description: ''
    delete:
      operationId: catalogs_api_evidence_destroy
      description: ViewSet for managing control evidence.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control evidence.
        required: true
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '204':
          description: No response body
    put:
      operationId: catalogs_api_evidence_update
      description: ViewSet for managing control evidence.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control evidence.
        required: true
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlEvidenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ControlEvidenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ControlEvidenceRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlEvidence'
          description: ''
    get:
      operationId: catalogs_api_evidence_retrieve
      description: ViewSet for managing control evidence.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control evidence.
        required: true
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlEvidence'
          description: ''
  /api/catalogs/api/evidence/{id}/assessments/:
    get:
      operationId: catalogs_api_evidence_assessments_retrieve
      description: Get all assessments that use this evidence.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control evidence.
        required: true
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlEvidence'
          description: ''
  /api/catalogs/api/evidence/{id}/validate_evidence/:
    post:
      operationId: catalogs_api_evidence_validate_evidence_create
      description: Validate a piece of evidence.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control evidence.
        required: true
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlEvidenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ControlEvidenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ControlEvidenceRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlEvidence'
          description: ''
  /api/catalogs/api/mappings/:
    post:
      operationId: catalogs_api_mappings_create
      description: ViewSet for managing framework mappings.
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrameworkMappingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FrameworkMappingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FrameworkMappingRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkMapping'
          description: ''
    get:
      operationId: catalogs_api_mappings_list
      description: ViewSet for managing framework mappings.
      parameters:
      - in: query
        name: mapping_type
        schema:
          type: string
          enum:
          - equivalent
          - partial
          - related
          - supports
        description: |-
          * `equivalent` - Equivalent Requirements
          * `partial` - Partially Overlapping
          * `supports` - Supporting Requirement
          * `related` - Related Requirement
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: source_clause__framework
        schema:
          type: integer
      - in: query
        name: target_clause__framework
        schema:
          type: integer
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FrameworkMapping'
          description: ''
  /api/catalogs/api/mappings/{id}/:
    patch:
      operationId: catalogs_api_mappings_partial_update
      description: ViewSet for managing framework mappings.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this framework mapping.
        required: true
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFrameworkMappingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFrameworkMappingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFrameworkMappingRequest'
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkMapping'
          description: ''
    delete:
      operationId: catalogs_api_mappings_destroy
      description: ViewSet for managing framework mappings.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this framework mapping.
        required: true
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '204':
          description: No response body
    put:
      operationId: catalogs_api_mappings_update
      description: ViewSet for managing framework mappings.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this framework mapping.
        required: true
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrameworkMappingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FrameworkMappingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FrameworkMappingRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkMapping'
          description: ''
    get:
      operationId: catalogs_api_mappings_retrieve
      description: ViewSet for managing framework mappings.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this framework mapping.
        required: true
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkMapping'
          description: ''
  /api/catalogs/api/assessments/:
    post:
      operationId: catalogs_api_assessments_create
      description: Create a new control assessment with all required metadata and
        assignment information.
      summary: Create control assessment
      tags:
      - Assessments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlAssessmentCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ControlAssessmentCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ControlAssessmentCreateUpdateRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlAssessmentCreateUpdate'
          description: ''
    get:
      operationId: catalogs_api_assessments_list
      description: Retrieve a paginated list of control assessments with comprehensive
        filtering, searching, and ordering capabilities.
      summary: List control assessments
      parameters:
      - in: query
        name: applicability
        schema:
          type: string
        description: Filter by applicability (applicable, not_applicable, conditional)
      - in: query
        name: assigned_to
        schema:
          type: integer
        description: Filter by assigned user ID
      - in: query
        name: completed
        schema:
          type: boolean
        description: Filter by completion status
      - in: query
        name: control
        schema:
          type: integer
      - in: query
        name: control__clauses__framework
        schema:
          type: integer
      - in: query
        name: framework
        schema:
          type: integer
        description: Filter by framework ID
      - in: query
        name: implementation_status
        schema:
          type: string
          enum:
          - implemented
          - not_applicable
          - not_implemented
          - partially_implemented
        description: |-
          Current implementation status of the control

          * `not_implemented` - Not Implemented
          * `partially_implemented` - Partially Implemented
          * `implemented` - Implemented
          * `not_applicable` - Not Applicable
      - in: query
        name: my_assignments
        schema:
          type: boolean
        description: Show only assessments assigned to current user
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: overdue
        schema:
          type: boolean
        description: Show only overdue assessments
      - in: query
        name: reviewer
        schema:
          type: integer
      - in: query
        name: risk_rating
        schema:
          type: string
          enum:
          - critical
          - high
          - low
          - medium
        description: |-
          Risk level if this control is not properly implemented

          * `low` - Low
          * `medium` - Medium
          * `high` - High
          * `critical` - Critical
      - in: query
        name: search
        schema:
          type: string
        description: Search across assessment_id, control_id, control_name, and assessment_notes
      - in: query
        name: status
        schema:
          type: string
        description: Filter by assessment status (not_started, pending, in_progress,
          under_review, complete, not_applicable)
      tags:
      - Assessments
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ControlAssessmentList'
              examples:
                MyOverdueAssessments:
                  value:
                  - ?my_assignments=true&overdue=true
                  summary: Get current user's overdue assessments
                  description: Example of filtering for current user's overdue assessments
          description: ''
  /api/catalogs/api/assessments/bulk_create/:
    post:
      operationId: catalogs_api_assessments_bulk_create_create
      description: Create multiple control assessments in bulk for a specific framework.
        Automatically creates assessments for all controls in the framework.
      summary: Bulk create assessments
      tags:
      - Assessments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkAssessmentCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkAssessmentCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkAssessmentCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '201':
          description: Assessments created successfully
        '400':
          description: Bad request - invalid framework or data
  /api/catalogs/api/assessments/my_assignments/:
    get:
      operationId: catalogs_api_assessments_my_assignments_retrieve
      description: Get assessments assigned to current user.
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlAssessmentDetail'
          description: ''
  /api/catalogs/api/assessments/overdue/:
    get:
      operationId: catalogs_api_assessments_overdue_retrieve
      description: Get all overdue assessments.
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlAssessmentDetail'
          description: ''
  /api/catalogs/api/assessments/progress_report/:
    get:
      operationId: catalogs_api_assessments_progress_report_retrieve
      description: Generate comprehensive progress report with statistics, breakdowns,
        and upcoming deadlines. Optionally filter by framework.
      summary: Get assessment progress report
      parameters:
      - in: query
        name: framework
        schema:
          type: integer
        description: Filter progress report by specific framework ID
      tags:
      - Assessments
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentProgress'
              examples:
                ProgressReport:
                  value:
                    framework_id: 1
                    total_assessments: 93
                    completed_assessments: 67
                    overdue_assessments: 5
                    completion_percentage: 72.0
                    status_breakdown:
                      complete:
                        display: Complete
                        count: 67
                      in_progress:
                        display: In Progress
                        count: 21
                      overdue:
                        display: Overdue
                        count: 5
                    upcoming_due_dates:
                    - assessment_id: ASSESS-089
                      control_id: A.8.1.2
                      due_date: '2024-03-20'
                      days_until_due: 5
                  summary: Assessment progress report example
                  description: Comprehensive progress report with statistics and breakdowns
          description: ''
  /api/catalogs/api/assessments/{id}/:
    patch:
      operationId: catalogs_api_assessments_partial_update
      description: Update specific fields of an existing control assessment.
      summary: Partially update assessment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control assessment.
        required: true
      tags:
      - Assessments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedControlAssessmentCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedControlAssessmentCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedControlAssessmentCreateUpdateRequest'
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlAssessmentCreateUpdate'
          description: ''
    delete:
      operationId: catalogs_api_assessments_destroy
      description: Delete a control assessment and all associated evidence links.
      summary: Delete assessment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control assessment.
        required: true
      tags:
      - Assessments
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '204':
          description: No response body
    put:
      operationId: catalogs_api_assessments_update
      description: Update an existing control assessment. Requires all fields.
      summary: Update assessment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control assessment.
        required: true
      tags:
      - Assessments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlAssessmentCreateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ControlAssessmentCreateUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ControlAssessmentCreateUpdateRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlAssessmentCreateUpdate'
          description: ''
    get:
      operationId: catalogs_api_assessments_retrieve
      description: Retrieve detailed information about a specific control assessment
        including evidence links and progress.
      summary: Get assessment details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control assessment.
        required: true
      tags:
      - Assessments
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlAssessmentDetail'
          description: ''
  /api/catalogs/api/assessments/{id}/bulk_upload_evidence/:
    post:
      operationId: catalogs_api_assessments_bulk_upload_evidence_create
      description: Upload multiple evidence files to this assessment.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control assessment.
        required: true
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlAssessmentDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ControlAssessmentDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ControlAssessmentDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlAssessmentDetail'
          description: ''
  /api/catalogs/api/assessments/{id}/evidence/:
    get:
      operationId: catalogs_api_assessments_evidence_retrieve
      description: Get all evidence linked to this assessment.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control assessment.
        required: true
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlAssessmentDetail'
          description: ''
  /api/catalogs/api/assessments/{id}/link_evidence/:
    post:
      operationId: catalogs_api_assessments_link_evidence_create
      description: Link evidence to this assessment.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control assessment.
        required: true
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlAssessmentDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ControlAssessmentDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ControlAssessmentDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlAssessmentDetail'
          description: ''
  /api/catalogs/api/assessments/{id}/remove_evidence/:
    delete:
      operationId: catalogs_api_assessments_remove_evidence_destroy
      description: Remove evidence link from this assessment.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control assessment.
        required: true
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '204':
          description: No response body
  /api/catalogs/api/assessments/{id}/update_status/:
    post:
      operationId: catalogs_api_assessments_update_status_create
      description: Update assessment status with notes.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control assessment.
        required: true
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlAssessmentDetailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ControlAssessmentDetailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ControlAssessmentDetailRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControlAssessmentDetail'
          description: ''
  /api/catalogs/api/assessments/{id}/upload_evidence/:
    post:
      operationId: catalogs_api_assessments_upload_evidence_create
      description: Upload a file as evidence and link it directly to this assessment.
        Creates document, evidence, and assessment link in one operation.
      summary: Upload evidence to assessment
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this control assessment.
        required: true
      tags:
      - Assessments
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                title:
                  type: string
                  description: Document title
                description:
                  type: string
                  description: Document description
                evidence_title:
                  type: string
                  description: Evidence title
                evidence_type:
                  type: string
                  description: Evidence type
                evidence_description:
                  type: string
                  description: Evidence description
                evidence_purpose:
                  type: string
                  description: Purpose of evidence
                is_primary_evidence:
                  type: boolean
                  description: Is primary evidence
                evidence_date:
                  type: string
                  format: date
                  description: Evidence date
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '201':
          description: Evidence uploaded and linked successfully
        '400':
          description: Bad request - file missing or invalid data
        '404':
          description: Assessment not found
  /api/catalogs/api/assessment-evidence/:
    post:
      operationId: catalogs_api_assessment_evidence_create
      description: ViewSet for managing assessment evidence links.
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentEvidenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssessmentEvidenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssessmentEvidenceRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentEvidence'
          description: ''
    get:
      operationId: catalogs_api_assessment_evidence_list
      description: ViewSet for managing assessment evidence links.
      parameters:
      - in: query
        name: assessment
        schema:
          type: integer
      - in: query
        name: evidence
        schema:
          type: integer
      - in: query
        name: is_primary_evidence
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssessmentEvidence'
          description: ''
  /api/catalogs/api/assessment-evidence/{id}/:
    patch:
      operationId: catalogs_api_assessment_evidence_partial_update
      description: ViewSet for managing assessment evidence links.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this assessment evidence.
        required: true
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssessmentEvidenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssessmentEvidenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssessmentEvidenceRequest'
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentEvidence'
          description: ''
    delete:
      operationId: catalogs_api_assessment_evidence_destroy
      description: ViewSet for managing assessment evidence links.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this assessment evidence.
        required: true
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '204':
          description: No response body
    put:
      operationId: catalogs_api_assessment_evidence_update
      description: ViewSet for managing assessment evidence links.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this assessment evidence.
        required: true
      tags:
      - catalogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentEvidenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssessmentEvidenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssessmentEvidenceRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentEvidence'
          description: ''
    get:
      operationId: catalogs_api_assessment_evidence_retrieve
      description: ViewSet for managing assessment evidence links.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this assessment evidence.
        required: true
      tags:
      - catalogs
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentEvidence'
          description: ''
  /api/exports/assessment-reports/:
    post:
      operationId: exports_assessment_reports_create
      description: Create a new assessment report configuration. Use the 'generate'
        action to start report generation.
      summary: Create assessment report
      tags:
      - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentReportCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssessmentReportCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssessmentReportCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentReportCreate'
          description: ''
    get:
      operationId: exports_assessment_reports_list
      description: Retrieve a list of assessment reports created by the current user
        with filtering capabilities.
      summary: List assessment reports
      parameters:
      - in: query
        name: framework
        schema:
          type: integer
        description: Filter by framework ID
      - in: query
        name: report_type
        schema:
          type: string
        description: Filter by report type (summary, detailed, compliance, etc.)
      - in: query
        name: status
        schema:
          type: string
        description: Filter by report status (pending, processing, completed, failed)
      tags:
      - Reports
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssessmentReport'
          description: ''
  /api/exports/assessment-reports/assessment_options/:
    get:
      operationId: exports_assessment_reports_assessment_options_retrieve
      description: Get available assessments for report generation.
      tags:
      - exports
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentReport'
          description: ''
  /api/exports/assessment-reports/framework_options/:
    get:
      operationId: exports_assessment_reports_framework_options_retrieve
      description: Get available frameworks for report generation.
      tags:
      - exports
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentReport'
          description: ''
  /api/exports/assessment-reports/quick_generate/:
    post:
      operationId: exports_assessment_reports_quick_generate_create
      description: Create a new assessment report and immediately start generation
        in a single operation.
      summary: Quick generate report
      tags:
      - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentReportCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssessmentReportCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssessmentReportCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '201':
          description: Report created and generation started
        '400':
          description: Invalid report configuration
        '500':
          description: Failed to start generation
  /api/exports/assessment-reports/{id}/:
    patch:
      operationId: exports_assessment_reports_partial_update
      description: |-
        **Assessment Report Management**

        This ViewSet provides comprehensive management of assessment reports including:
        - Report configuration and creation
        - Asynchronous report generation with status tracking
        - Download management for completed reports
        - Framework and assessment selection options

        **Key Features:**
        - Support for multiple report types (summary, detailed, compliance)
        - Async PDF generation with progress tracking
        - Framework-specific and assessment-specific reporting
        - Professional PDF output with charts and analytics
        - Secure file storage and download links

        **Report Generation Workflow:**
        1. Create report configuration
        2. Trigger generation (async)
        3. Monitor generation status
        4. Download completed report

        **Common Use Cases:**
        - Generate compliance reports for audits
        - Create assessment summaries for management
        - Export detailed findings for remediation
        - Produce framework-specific reports
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - exports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssessmentReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssessmentReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssessmentReportRequest'
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentReport'
          description: ''
    delete:
      operationId: exports_assessment_reports_destroy
      description: Delete an assessment report and its generated file if it exists.
      summary: Delete report
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Reports
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '204':
          description: No response body
    put:
      operationId: exports_assessment_reports_update
      description: Update an existing assessment report configuration. Cannot update
        reports that are processing or completed.
      summary: Update report
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssessmentReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssessmentReportRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentReport'
          description: ''
    get:
      operationId: exports_assessment_reports_retrieve
      description: Retrieve detailed information about a specific assessment report
        including generation status.
      summary: Get report details
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Reports
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentReport'
          description: ''
  /api/exports/assessment-reports/{id}/download/:
    get:
      operationId: exports_assessment_reports_download_retrieve
      description: Download the generated report.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - exports
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentReport'
          description: ''
  /api/exports/assessment-reports/{id}/generate/:
    post:
      operationId: exports_assessment_reports_generate_create
      description: Start asynchronous generation of the assessment report. Returns
        immediately with status tracking information.
      summary: Generate report
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssessmentReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssessmentReportRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '202':
          description: Report generation started
        '400':
          description: Report already processing or completed
        '500':
          description: Failed to start generation
  /api/exports/assessment-reports/{id}/status_check/:
    get:
      operationId: exports_assessment_reports_status_check_retrieve
      description: Check report generation status.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - exports
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentReport'
          description: ''
  /api/plans/:
    get:
      operationId: plans_list
      description: Retrieve all available subscription plans with pricing and feature
        details.
      summary: List subscription plans
      tags:
      - Billing
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plan'
          description: ''
  /api/plans/{id}/:
    get:
      operationId: plans_retrieve
      description: Retrieve detailed information about a specific subscription plan.
      summary: Get plan details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plan.
        required: true
      tags:
      - Billing
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
  /api/billing/billing_portal/:
    get:
      operationId: billing_billing_portal_retrieve
      description: Create Stripe billing portal session.
      tags:
      - billing
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: No response body
  /api/billing/cancel_subscription/:
    post:
      operationId: billing_cancel_subscription_create
      description: Cancel current subscription.
      tags:
      - billing
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: No response body
  /api/billing/create_checkout_session/:
    post:
      operationId: billing_create_checkout_session_create
      description: Create a Stripe checkout session for subscription upgrade or purchase.
        Returns URL for payment processing.
      summary: Create checkout session
      tags:
      - Billing
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                plan:
                  type: string
                  description: Plan slug (basic, enterprise, etc.)
              required:
              - plan
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: Checkout session created successfully
        '400':
          description: Plan is required or not available for purchase
        '404':
          description: Plan not found
        '500':
          description: Failed to create checkout session
  /api/billing/current_subscription/:
    get:
      operationId: billing_current_subscription_retrieve
      description: Retrieve the current tenant's subscription details including plan,
        status, and billing information.
      summary: Get current subscription
      tags:
      - Billing
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
        '500':
          description: Failed to fetch subscription
  /api/limit-overrides/:
    post:
      operationId: limit_overrides_create
      description: Create a new limit override request.
      tags:
      - limit-overrides
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LimitOverrideCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LimitOverrideCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LimitOverrideCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitOverrideCreate'
          description: ''
    get:
      operationId: limit_overrides_list
      description: ViewSet for managing limit override requests with approval workflow.
      tags:
      - limit-overrides
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LimitOverrideRequest'
          description: ''
  /api/limit-overrides/approved_pending_application/:
    get:
      operationId: limit_overrides_approved_pending_application_retrieve
      description: Get all fully approved requests pending application.
      tags:
      - limit-overrides
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitOverrideRequest'
          description: ''
  /api/limit-overrides/pending_approvals/:
    get:
      operationId: limit_overrides_pending_approvals_retrieve
      description: Get all requests pending approval for the current user.
      tags:
      - limit-overrides
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitOverrideRequest'
          description: ''
  /api/limit-overrides/{id}/:
    patch:
      operationId: limit_overrides_partial_update
      description: ViewSet for managing limit override requests with approval workflow.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this limit override request.
        required: true
      tags:
      - limit-overrides
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLimitOverrideRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLimitOverrideRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLimitOverrideRequestRequest'
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitOverrideRequest'
          description: ''
    delete:
      operationId: limit_overrides_destroy
      description: ViewSet for managing limit override requests with approval workflow.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this limit override request.
        required: true
      tags:
      - limit-overrides
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '204':
          description: No response body
    put:
      operationId: limit_overrides_update
      description: ViewSet for managing limit override requests with approval workflow.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this limit override request.
        required: true
      tags:
      - limit-overrides
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LimitOverrideRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LimitOverrideRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LimitOverrideRequestRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitOverrideRequest'
          description: ''
    get:
      operationId: limit_overrides_retrieve
      description: ViewSet for managing limit override requests with approval workflow.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this limit override request.
        required: true
      tags:
      - limit-overrides
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitOverrideRequest'
          description: ''
  /api/limit-overrides/{id}/apply_override/:
    post:
      operationId: limit_overrides_apply_override_create
      description: Apply an approved limit override to the subscription.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this limit override request.
        required: true
      tags:
      - limit-overrides
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LimitOverrideRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LimitOverrideRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LimitOverrideRequestRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitOverrideRequest'
          description: ''
  /api/limit-overrides/{id}/approve_first/:
    post:
      operationId: limit_overrides_approve_first_create
      description: Provide first approval for limit override request.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this limit override request.
        required: true
      tags:
      - limit-overrides
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovalActionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApprovalActionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApprovalActionRequest'
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalAction'
          description: ''
  /api/limit-overrides/{id}/approve_second/:
    post:
      operationId: limit_overrides_approve_second_create
      description: Provide second approval for limit override request.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this limit override request.
        required: true
      tags:
      - limit-overrides
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovalActionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApprovalActionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApprovalActionRequest'
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalAction'
          description: ''
  /api/limit-overrides/{id}/reject/:
    post:
      operationId: limit_overrides_reject_create
      description: Reject a limit override request.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this limit override request.
        required: true
      tags:
      - limit-overrides
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovalActionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApprovalActionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApprovalActionRequest'
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalAction'
          description: ''
  /api/documents/:
    post:
      operationId: documents_create
      description: Upload a new document file to secure tenant-isolated storage with
        plan limit enforcement.
      summary: Upload document
      tags:
      - Documents
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: File to upload
                title:
                  type: string
                  description: Document title
                description:
                  type: string
                  description: Document description
                is_public:
                  type: boolean
                  description: Whether document is publicly accessible
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
        '400':
          description: Invalid file or data
        '403':
          description: Document limit exceeded for current plan
    get:
      operationId: documents_list
      description: Retrieve a paginated list of documents uploaded by users in the
        current tenant with secure access control.
      summary: List documents
      tags:
      - Documents
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentList'
          description: ''
  /api/documents/plan_usage/:
    get:
      operationId: documents_plan_usage_retrieve
      description: Get current plan usage and limits for the tenant.
      tags:
      - documents
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/documents/storage_info/:
    get:
      operationId: documents_storage_info_retrieve
      description: |-
        Get information about the storage backend and tenant container.
        Useful for testing and debugging.
      tags:
      - documents
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/documents/{id}/:
    patch:
      operationId: documents_partial_update
      description: |-
        **Document Management and File Storage**

        This ViewSet provides comprehensive document management with Azure Blob Storage integration:
        - Secure file upload with tenant isolation
        - Plan-based storage limits enforcement
        - Access logging and audit trails
        - Secure download with access control

        **Key Features:**
        - Azure Blob Storage integration with tenant containers
        - Plan-based document limits (Free: 100MB, Basic: 1GB, Enterprise: 10GB)
        - Comprehensive access logging for security audit
        - Support for various file types and sizes
        - Secure download URLs with access control

        **Security Features:**
        - Tenant isolation in storage containers
        - Access control and permission checking
        - Audit logging for all file access
        - Secure file URL generation

        **Common Use Cases:**
        - Upload evidence files for assessments
        - Store compliance documentation
        - Manage policy and procedure documents
        - Download files with access tracking
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocumentRequest'
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: documents_destroy
      description: Delete a document and its file from storage. Only the uploader
        can delete documents.
      summary: Delete document
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - Documents
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '204':
          description: No response body
    put:
      operationId: documents_update
      description: Update document metadata. File cannot be changed after upload.
      summary: Update document
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - Documents
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DocumentRequest'
        required: true
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    get:
      operationId: documents_retrieve
      description: Retrieve detailed information about a specific document including
        metadata and access information.
      summary: Get document details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - Documents
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/documents/{id}/access_logs/:
    get:
      operationId: documents_access_logs_retrieve
      description: Get access logs for a document.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/documents/{id}/download/:
    get:
      operationId: documents_download_retrieve
      description: Download a document file with access logging and security checks.
        Returns download URL or file stream.
      summary: Download document
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - Documents
      security:
      - cookieAuth: []
      - SessionAuth: []
      responses:
        '200':
          description: Download URL and file information
        '403':
          description: Permission denied
        '404':
          description: File not found or inaccessible
components:
  schemas:
    ApplicabilityEnum:
      enum:
      - applicable
      - not_applicable
      - to_be_determined
      type: string
      description: |-
        * `applicable` - Applicable
        * `not_applicable` - Not Applicable
        * `to_be_determined` - To Be Determined
    ApprovalAction:
      type: object
      description: Serializer for approval/rejection actions.
      properties:
        notes:
          type: string
          description: Optional notes about the approval/rejection
          maxLength: 1000
        rejection_reason:
          type: string
          description: Required for rejections - explain why the request was rejected
          maxLength: 1000
    ApprovalActionRequest:
      type: object
      description: Serializer for approval/rejection actions.
      properties:
        notes:
          type: string
          description: Optional notes about the approval/rejection
          maxLength: 1000
        rejection_reason:
          type: string
          description: Required for rejections - explain why the request was rejected
          maxLength: 1000
    AssessmentEvidence:
      type: object
      description: Serializer for assessment evidence links.
      properties:
        id:
          type: integer
          readOnly: true
        assessment:
          type: integer
        evidence:
          type: integer
        evidence_details:
          allOf:
          - $ref: '#/components/schemas/ControlEvidence'
          readOnly: true
        evidence_purpose:
          type: string
          description: Purpose of this evidence for the assessment
          maxLength: 100
        is_primary_evidence:
          type: boolean
          description: Whether this is primary evidence for the assessment
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - assessment
      - created_at
      - created_by_username
      - evidence
      - evidence_details
      - id
    AssessmentEvidenceRequest:
      type: object
      description: Serializer for assessment evidence links.
      properties:
        assessment:
          type: integer
        evidence:
          type: integer
        evidence_purpose:
          type: string
          description: Purpose of this evidence for the assessment
          maxLength: 100
        is_primary_evidence:
          type: boolean
          description: Whether this is primary evidence for the assessment
      required:
      - assessment
      - evidence
    AssessmentProgress:
      type: object
      description: Serializer for assessment progress reporting.
      properties:
        framework_id:
          type: integer
        total_assessments:
          type: integer
        completed_assessments:
          type: integer
        overdue_assessments:
          type: integer
        completion_percentage:
          type: number
          format: double
        status_breakdown:
          type: object
          additionalProperties: {}
        applicability_breakdown:
          type: object
          additionalProperties: {}
        risk_breakdown:
          type: object
          additionalProperties: {}
        upcoming_due_dates:
          type: array
          items: {}
        assignments_by_user:
          type: object
          additionalProperties: {}
      required:
      - applicability_breakdown
      - assignments_by_user
      - completed_assessments
      - completion_percentage
      - overdue_assessments
      - risk_breakdown
      - status_breakdown
      - total_assessments
      - upcoming_due_dates
    AssessmentReport:
      type: object
      description: Serializer for AssessmentReport model.
      properties:
        id:
          type: integer
          readOnly: true
        report_type:
          $ref: '#/components/schemas/ReportTypeEnum'
        title:
          type: string
          maxLength: 200
        description:
          type: string
        framework:
          type: integer
          nullable: true
          description: Framework to generate report for (if applicable)
        framework_name:
          type: string
          readOnly: true
        requested_by:
          type: integer
          readOnly: true
        requested_by_name:
          type: string
          readOnly: true
        requested_at:
          type: string
          format: date-time
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportStatusEnum'
          readOnly: true
        generated_file:
          type: integer
          readOnly: true
          nullable: true
          description: Generated PDF report file
        generated_file_details:
          allOf:
          - $ref: '#/components/schemas/Document'
          readOnly: true
        generation_started_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        generation_completed_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        error_message:
          type: string
          readOnly: true
        include_evidence_summary:
          type: boolean
        include_implementation_notes:
          type: boolean
        include_overdue_items:
          type: boolean
        include_charts:
          type: boolean
      required:
      - error_message
      - framework_name
      - generated_file
      - generated_file_details
      - generation_completed_at
      - generation_started_at
      - id
      - report_type
      - requested_at
      - requested_by
      - requested_by_name
      - status
      - title
    AssessmentReportCreate:
      type: object
      description: Serializer for creating assessment reports.
      properties:
        report_type:
          $ref: '#/components/schemas/ReportTypeEnum'
        title:
          type: string
          maxLength: 200
        description:
          type: string
        framework:
          type: integer
          nullable: true
          description: Framework to generate report for (if applicable)
        assessment_ids:
          type: array
          items:
            type: integer
          description: List of assessment IDs to include in the report
        include_evidence_summary:
          type: boolean
        include_implementation_notes:
          type: boolean
        include_overdue_items:
          type: boolean
        include_charts:
          type: boolean
      required:
      - report_type
      - title
    AssessmentReportCreateRequest:
      type: object
      description: Serializer for creating assessment reports.
      properties:
        report_type:
          $ref: '#/components/schemas/ReportTypeEnum'
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        framework:
          type: integer
          nullable: true
          description: Framework to generate report for (if applicable)
        assessment_ids:
          type: array
          items:
            type: integer
          description: List of assessment IDs to include in the report
        include_evidence_summary:
          type: boolean
        include_implementation_notes:
          type: boolean
        include_overdue_items:
          type: boolean
        include_charts:
          type: boolean
      required:
      - report_type
      - title
    AssessmentReportRequest:
      type: object
      description: Serializer for AssessmentReport model.
      properties:
        report_type:
          $ref: '#/components/schemas/ReportTypeEnum'
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        framework:
          type: integer
          nullable: true
          description: Framework to generate report for (if applicable)
        include_evidence_summary:
          type: boolean
        include_implementation_notes:
          type: boolean
        include_overdue_items:
          type: boolean
        include_charts:
          type: boolean
      required:
      - report_type
      - title
    AssessmentReportStatusEnum:
      enum:
      - pending
      - processing
      - completed
      - failed
      type: string
      description: |-
        * `pending` - Pending Generation
        * `processing` - Processing
        * `completed` - Completed
        * `failed` - Failed
    AutomationLevelEnum:
      enum:
      - manual
      - semi_automated
      - automated
      - continuous
      type: string
      description: |-
        * `manual` - Manual Control
        * `semi_automated` - Semi-Automated Control
        * `automated` - Automated Control
        * `continuous` - Continuous Monitoring
    BlankEnum:
      enum:
      - ''
    BulkAssessmentCreateRequest:
      type: object
      description: Serializer for creating assessments in bulk for a framework.
      properties:
        framework_id:
          type: integer
        default_due_date:
          type: string
          format: date
        default_assigned_to:
          type: integer
        default_applicability:
          allOf:
          - $ref: '#/components/schemas/DefaultApplicabilityEnum'
          default: to_be_determined
        controls:
          type: array
          items:
            type: integer
          description: Specific control IDs to create assessments for. If empty, creates
            for all framework controls.
      required:
      - framework_id
    ClauseDetail:
      type: object
      description: Detailed clause serializer with full information.
      properties:
        id:
          type: integer
          readOnly: true
        framework:
          type: integer
        framework_name:
          type: string
          readOnly: true
        framework_short_name:
          type: string
          readOnly: true
        clause_id:
          type: string
          description: Framework-specific clause identifier (e.g., CC6.1, A.8.2.1)
          maxLength: 50
        full_clause_id:
          type: string
          readOnly: true
        title:
          type: string
          description: Clause title or heading
          maxLength: 300
        description:
          type: string
          description: Full clause text and requirements
        parent_clause:
          type: integer
          nullable: true
          description: Parent clause for hierarchical organization
        parent_clause_id:
          type: string
          readOnly: true
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order within framework
        clause_type:
          $ref: '#/components/schemas/ClauseTypeEnum'
        criticality:
          $ref: '#/components/schemas/UrgencyEnum'
        is_testable:
          type: boolean
          description: Whether this clause can be tested/audited
        implementation_guidance:
          type: string
          description: Guidance on how to implement this clause
        testing_procedures:
          type: string
          description: Procedures for testing compliance with this clause
        external_references:
          type: object
          additionalProperties: {}
          description: References to other standards, regulations, or frameworks
        control_count:
          type: string
          readOnly: true
        subclauses:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - clause_id
      - control_count
      - created_at
      - description
      - framework
      - framework_name
      - framework_short_name
      - full_clause_id
      - id
      - parent_clause_id
      - subclauses
      - title
      - updated_at
    ClauseDetailRequest:
      type: object
      description: Detailed clause serializer with full information.
      properties:
        framework:
          type: integer
        clause_id:
          type: string
          minLength: 1
          description: Framework-specific clause identifier (e.g., CC6.1, A.8.2.1)
          maxLength: 50
        title:
          type: string
          minLength: 1
          description: Clause title or heading
          maxLength: 300
        description:
          type: string
          minLength: 1
          description: Full clause text and requirements
        parent_clause:
          type: integer
          nullable: true
          description: Parent clause for hierarchical organization
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order within framework
        clause_type:
          $ref: '#/components/schemas/ClauseTypeEnum'
        criticality:
          $ref: '#/components/schemas/UrgencyEnum'
        is_testable:
          type: boolean
          description: Whether this clause can be tested/audited
        implementation_guidance:
          type: string
          description: Guidance on how to implement this clause
        testing_procedures:
          type: string
          description: Procedures for testing compliance with this clause
        external_references:
          type: object
          additionalProperties: {}
          description: References to other standards, regulations, or frameworks
      required:
      - clause_id
      - description
      - framework
      - title
    ClauseList:
      type: object
      description: Lightweight serializer for clause listings.
      properties:
        id:
          type: integer
          readOnly: true
        clause_id:
          type: string
          description: Framework-specific clause identifier (e.g., CC6.1, A.8.2.1)
          maxLength: 50
        full_clause_id:
          type: string
          readOnly: true
        title:
          type: string
          description: Clause title or heading
          maxLength: 300
        clause_type:
          $ref: '#/components/schemas/ClauseTypeEnum'
        criticality:
          $ref: '#/components/schemas/UrgencyEnum'
        is_testable:
          type: boolean
          description: Whether this clause can be tested/audited
        control_count:
          type: string
          readOnly: true
        framework_name:
          type: string
          readOnly: true
        framework_short_name:
          type: string
          readOnly: true
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order within framework
      required:
      - clause_id
      - control_count
      - framework_name
      - framework_short_name
      - full_clause_id
      - id
      - title
    ClauseListRequest:
      type: object
      description: Lightweight serializer for clause listings.
      properties:
        clause_id:
          type: string
          minLength: 1
          description: Framework-specific clause identifier (e.g., CC6.1, A.8.2.1)
          maxLength: 50
        title:
          type: string
          minLength: 1
          description: Clause title or heading
          maxLength: 300
        clause_type:
          $ref: '#/components/schemas/ClauseTypeEnum'
        criticality:
          $ref: '#/components/schemas/UrgencyEnum'
        is_testable:
          type: boolean
          description: Whether this clause can be tested/audited
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order within framework
      required:
      - clause_id
      - title
    ClauseTypeEnum:
      enum:
      - control
      - policy
      - procedure
      - documentation
      - assessment
      - monitoring
      - reporting
      type: string
      description: |-
        * `control` - Control Requirement
        * `policy` - Policy Requirement
        * `procedure` - Procedure Requirement
        * `documentation` - Documentation Requirement
        * `assessment` - Assessment Requirement
        * `monitoring` - Monitoring Requirement
        * `reporting` - Reporting Requirement
    ControlAssessmentCreateUpdate:
      type: object
      description: Serializer for creating and updating assessments.
      properties:
        control:
          type: integer
          description: The control being assessed
        applicability:
          allOf:
          - $ref: '#/components/schemas/ApplicabilityEnum'
          description: |-
            Whether this control applies to the organization

            * `applicable` - Applicable
            * `not_applicable` - Not Applicable
            * `to_be_determined` - To Be Determined
        applicability_rationale:
          type: string
          description: Explanation of why the control is/isn't applicable
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            Current assessment status

            * `not_started` - Not Started
            * `pending` - Pending
            * `in_progress` - In Progress
            * `under_review` - Under Review
            * `complete` - Complete
            * `not_applicable` - Not Applicable
            * `deferred` - Deferred
        implementation_status:
          allOf:
          - $ref: '#/components/schemas/ImplementationStatusEnum'
          description: |-
            Current implementation status of the control

            * `not_implemented` - Not Implemented
            * `partially_implemented` - Partially Implemented
            * `implemented` - Implemented
            * `not_applicable` - Not Applicable
        assigned_to:
          type: integer
          nullable: true
          description: Person responsible for completing this assessment
        reviewer:
          type: integer
          nullable: true
          description: Person responsible for reviewing this assessment
        due_date:
          type: string
          format: date
          nullable: true
          description: Target completion date for this assessment
        current_state_description:
          type: string
          description: Description of the current state of control implementation
        target_state_description:
          type: string
          description: Description of the desired future state
        gap_analysis:
          type: string
          description: Analysis of gaps between current and target state
        implementation_approach:
          type: string
          description: Planned or implemented approach for addressing this control
        maturity_level:
          description: |-
            Current maturity level of control implementation

            * `ad_hoc` - Ad Hoc
            * `repeatable` - Repeatable
            * `defined` - Defined
            * `managed` - Managed
            * `optimized` - Optimized
          oneOf:
          - $ref: '#/components/schemas/MaturityLevelEnum'
          - $ref: '#/components/schemas/BlankEnum'
        risk_rating:
          description: |-
            Risk level if this control is not properly implemented

            * `low` - Low
            * `medium` - Medium
            * `high` - High
            * `critical` - Critical
          oneOf:
          - $ref: '#/components/schemas/UrgencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        compliance_score:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Compliance score (0-100) for this control
        assessment_notes:
          type: string
          description: General notes and observations about this assessment
        reviewer_comments:
          type: string
          description: Comments from the reviewer
        remediation_plan:
          type: string
          description: Plan for addressing gaps and improving control implementation
        remediation_due_date:
          type: string
          format: date
          nullable: true
          description: Target date for completing remediation activities
        remediation_owner:
          type: integer
          nullable: true
          description: Person responsible for remediation activities
      required:
      - control
    ControlAssessmentCreateUpdateRequest:
      type: object
      description: Serializer for creating and updating assessments.
      properties:
        control:
          type: integer
          description: The control being assessed
        applicability:
          allOf:
          - $ref: '#/components/schemas/ApplicabilityEnum'
          description: |-
            Whether this control applies to the organization

            * `applicable` - Applicable
            * `not_applicable` - Not Applicable
            * `to_be_determined` - To Be Determined
        applicability_rationale:
          type: string
          description: Explanation of why the control is/isn't applicable
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            Current assessment status

            * `not_started` - Not Started
            * `pending` - Pending
            * `in_progress` - In Progress
            * `under_review` - Under Review
            * `complete` - Complete
            * `not_applicable` - Not Applicable
            * `deferred` - Deferred
        implementation_status:
          allOf:
          - $ref: '#/components/schemas/ImplementationStatusEnum'
          description: |-
            Current implementation status of the control

            * `not_implemented` - Not Implemented
            * `partially_implemented` - Partially Implemented
            * `implemented` - Implemented
            * `not_applicable` - Not Applicable
        assigned_to:
          type: integer
          nullable: true
          description: Person responsible for completing this assessment
        reviewer:
          type: integer
          nullable: true
          description: Person responsible for reviewing this assessment
        due_date:
          type: string
          format: date
          nullable: true
          description: Target completion date for this assessment
        current_state_description:
          type: string
          description: Description of the current state of control implementation
        target_state_description:
          type: string
          description: Description of the desired future state
        gap_analysis:
          type: string
          description: Analysis of gaps between current and target state
        implementation_approach:
          type: string
          description: Planned or implemented approach for addressing this control
        maturity_level:
          description: |-
            Current maturity level of control implementation

            * `ad_hoc` - Ad Hoc
            * `repeatable` - Repeatable
            * `defined` - Defined
            * `managed` - Managed
            * `optimized` - Optimized
          oneOf:
          - $ref: '#/components/schemas/MaturityLevelEnum'
          - $ref: '#/components/schemas/BlankEnum'
        risk_rating:
          description: |-
            Risk level if this control is not properly implemented

            * `low` - Low
            * `medium` - Medium
            * `high` - High
            * `critical` - Critical
          oneOf:
          - $ref: '#/components/schemas/UrgencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        compliance_score:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Compliance score (0-100) for this control
        assessment_notes:
          type: string
          description: General notes and observations about this assessment
        reviewer_comments:
          type: string
          description: Comments from the reviewer
        remediation_plan:
          type: string
          description: Plan for addressing gaps and improving control implementation
        remediation_due_date:
          type: string
          format: date
          nullable: true
          description: Target date for completing remediation activities
        remediation_owner:
          type: integer
          nullable: true
          description: Person responsible for remediation activities
      required:
      - control
    ControlAssessmentDetail:
      type: object
      description: Detailed assessment serializer with full information.
      properties:
        id:
          type: integer
          readOnly: true
        assessment_id:
          type: string
          readOnly: true
          description: Unique assessment identifier
        control:
          type: integer
          description: The control being assessed
        control_details:
          allOf:
          - $ref: '#/components/schemas/ControlList'
          readOnly: true
        applicability:
          allOf:
          - $ref: '#/components/schemas/ApplicabilityEnum'
          description: |-
            Whether this control applies to the organization

            * `applicable` - Applicable
            * `not_applicable` - Not Applicable
            * `to_be_determined` - To Be Determined
        applicability_rationale:
          type: string
          description: Explanation of why the control is/isn't applicable
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            Current assessment status

            * `not_started` - Not Started
            * `pending` - Pending
            * `in_progress` - In Progress
            * `under_review` - Under Review
            * `complete` - Complete
            * `not_applicable` - Not Applicable
            * `deferred` - Deferred
        implementation_status:
          allOf:
          - $ref: '#/components/schemas/ImplementationStatusEnum'
          description: |-
            Current implementation status of the control

            * `not_implemented` - Not Implemented
            * `partially_implemented` - Partially Implemented
            * `implemented` - Implemented
            * `not_applicable` - Not Applicable
        assigned_to:
          type: integer
          nullable: true
          description: Person responsible for completing this assessment
        assigned_to_name:
          type: string
          readOnly: true
        reviewer:
          type: integer
          nullable: true
          description: Person responsible for reviewing this assessment
        reviewer_name:
          type: string
          readOnly: true
        due_date:
          type: string
          format: date
          nullable: true
          description: Target completion date for this assessment
        started_date:
          type: string
          format: date
          readOnly: true
          nullable: true
          description: Date when assessment work began
        completed_date:
          type: string
          format: date
          readOnly: true
          nullable: true
          description: Date when assessment was completed
        current_state_description:
          type: string
          description: Description of the current state of control implementation
        target_state_description:
          type: string
          description: Description of the desired future state
        gap_analysis:
          type: string
          description: Analysis of gaps between current and target state
        implementation_approach:
          type: string
          description: Planned or implemented approach for addressing this control
        maturity_level:
          description: |-
            Current maturity level of control implementation

            * `ad_hoc` - Ad Hoc
            * `repeatable` - Repeatable
            * `defined` - Defined
            * `managed` - Managed
            * `optimized` - Optimized
          oneOf:
          - $ref: '#/components/schemas/MaturityLevelEnum'
          - $ref: '#/components/schemas/BlankEnum'
        risk_rating:
          description: |-
            Risk level if this control is not properly implemented

            * `low` - Low
            * `medium` - Medium
            * `high` - High
            * `critical` - Critical
          oneOf:
          - $ref: '#/components/schemas/UrgencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        compliance_score:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Compliance score (0-100) for this control
        assessment_notes:
          type: string
          description: General notes and observations about this assessment
        reviewer_comments:
          type: string
          description: Comments from the reviewer
        remediation_plan:
          type: string
          description: Plan for addressing gaps and improving control implementation
        remediation_due_date:
          type: string
          format: date
          nullable: true
          description: Target date for completing remediation activities
        remediation_owner:
          type: integer
          nullable: true
          description: Person responsible for remediation activities
        remediation_owner_name:
          type: string
          readOnly: true
        version:
          type: integer
          readOnly: true
          description: Assessment version number
        change_log:
          type: object
          additionalProperties: {}
          readOnly: true
          description: History of changes to this assessment
        is_overdue:
          type: string
          readOnly: true
        is_complete:
          type: string
          readOnly: true
        completion_percentage:
          type: string
          readOnly: true
        days_until_due:
          type: string
          readOnly: true
        evidence_count:
          type: string
          readOnly: true
        primary_evidence:
          type: string
          readOnly: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - assessment_id
      - assigned_to_name
      - change_log
      - completed_date
      - completion_percentage
      - control
      - control_details
      - created_at
      - created_by_username
      - days_until_due
      - evidence_count
      - id
      - is_complete
      - is_overdue
      - primary_evidence
      - remediation_owner_name
      - reviewer_name
      - started_date
      - updated_at
      - version
    ControlAssessmentDetailRequest:
      type: object
      description: Detailed assessment serializer with full information.
      properties:
        control:
          type: integer
          description: The control being assessed
        applicability:
          allOf:
          - $ref: '#/components/schemas/ApplicabilityEnum'
          description: |-
            Whether this control applies to the organization

            * `applicable` - Applicable
            * `not_applicable` - Not Applicable
            * `to_be_determined` - To Be Determined
        applicability_rationale:
          type: string
          description: Explanation of why the control is/isn't applicable
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            Current assessment status

            * `not_started` - Not Started
            * `pending` - Pending
            * `in_progress` - In Progress
            * `under_review` - Under Review
            * `complete` - Complete
            * `not_applicable` - Not Applicable
            * `deferred` - Deferred
        implementation_status:
          allOf:
          - $ref: '#/components/schemas/ImplementationStatusEnum'
          description: |-
            Current implementation status of the control

            * `not_implemented` - Not Implemented
            * `partially_implemented` - Partially Implemented
            * `implemented` - Implemented
            * `not_applicable` - Not Applicable
        assigned_to:
          type: integer
          nullable: true
          description: Person responsible for completing this assessment
        reviewer:
          type: integer
          nullable: true
          description: Person responsible for reviewing this assessment
        due_date:
          type: string
          format: date
          nullable: true
          description: Target completion date for this assessment
        current_state_description:
          type: string
          description: Description of the current state of control implementation
        target_state_description:
          type: string
          description: Description of the desired future state
        gap_analysis:
          type: string
          description: Analysis of gaps between current and target state
        implementation_approach:
          type: string
          description: Planned or implemented approach for addressing this control
        maturity_level:
          description: |-
            Current maturity level of control implementation

            * `ad_hoc` - Ad Hoc
            * `repeatable` - Repeatable
            * `defined` - Defined
            * `managed` - Managed
            * `optimized` - Optimized
          oneOf:
          - $ref: '#/components/schemas/MaturityLevelEnum'
          - $ref: '#/components/schemas/BlankEnum'
        risk_rating:
          description: |-
            Risk level if this control is not properly implemented

            * `low` - Low
            * `medium` - Medium
            * `high` - High
            * `critical` - Critical
          oneOf:
          - $ref: '#/components/schemas/UrgencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        compliance_score:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Compliance score (0-100) for this control
        assessment_notes:
          type: string
          description: General notes and observations about this assessment
        reviewer_comments:
          type: string
          description: Comments from the reviewer
        remediation_plan:
          type: string
          description: Plan for addressing gaps and improving control implementation
        remediation_due_date:
          type: string
          format: date
          nullable: true
          description: Target date for completing remediation activities
        remediation_owner:
          type: integer
          nullable: true
          description: Person responsible for remediation activities
      required:
      - control
    ControlAssessmentList:
      type: object
      description: Lightweight serializer for assessment listings.
      properties:
        id:
          type: integer
          readOnly: true
        assessment_id:
          type: string
          description: Unique assessment identifier
          maxLength: 100
        control_id:
          type: string
          readOnly: true
        control_name:
          type: string
          readOnly: true
        framework_name:
          type: string
          readOnly: true
        applicability:
          allOf:
          - $ref: '#/components/schemas/ApplicabilityEnum'
          description: |-
            Whether this control applies to the organization

            * `applicable` - Applicable
            * `not_applicable` - Not Applicable
            * `to_be_determined` - To Be Determined
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            Current assessment status

            * `not_started` - Not Started
            * `pending` - Pending
            * `in_progress` - In Progress
            * `under_review` - Under Review
            * `complete` - Complete
            * `not_applicable` - Not Applicable
            * `deferred` - Deferred
        implementation_status:
          allOf:
          - $ref: '#/components/schemas/ImplementationStatusEnum'
          description: |-
            Current implementation status of the control

            * `not_implemented` - Not Implemented
            * `partially_implemented` - Partially Implemented
            * `implemented` - Implemented
            * `not_applicable` - Not Applicable
        assigned_to_name:
          type: string
          readOnly: true
        reviewer_name:
          type: string
          readOnly: true
        due_date:
          type: string
          format: date
          nullable: true
          description: Target completion date for this assessment
        completion_percentage:
          type: string
          readOnly: true
        is_overdue:
          type: string
          readOnly: true
        is_complete:
          type: string
          readOnly: true
        days_until_due:
          type: string
          readOnly: true
        risk_rating:
          description: |-
            Risk level if this control is not properly implemented

            * `low` - Low
            * `medium` - Medium
            * `high` - High
            * `critical` - Critical
          oneOf:
          - $ref: '#/components/schemas/UrgencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        compliance_score:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Compliance score (0-100) for this control
        evidence_count:
          type: string
          readOnly: true
        has_primary_evidence:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - assessment_id
      - assigned_to_name
      - completion_percentage
      - control_id
      - control_name
      - created_at
      - days_until_due
      - evidence_count
      - framework_name
      - has_primary_evidence
      - id
      - is_complete
      - is_overdue
      - reviewer_name
      - updated_at
    ControlCreateUpdate:
      type: object
      description: Serializer for creating and updating controls.
      properties:
        control_id:
          type: string
          description: Unique control identifier
          pattern: ^[A-Z0-9][A-Z0-9\-\.]*$
          maxLength: 50
        name:
          type: string
          description: Control name or title
          maxLength: 200
        description:
          type: string
          description: Detailed control description
        clauses:
          type: array
          items:
            type: integer
          description: Framework clauses this control addresses
        control_type:
          $ref: '#/components/schemas/ControlTypeEnum'
        automation_level:
          $ref: '#/components/schemas/AutomationLevelEnum'
        status:
          $ref: '#/components/schemas/Status9ffEnum'
        control_owner:
          type: integer
          nullable: true
          description: Person responsible for this control
        business_owner:
          type: string
          description: Business unit or department responsible
          maxLength: 200
        implementation_details:
          type: string
          description: Specific implementation steps and procedures
        frequency:
          type: string
          description: How often this control is performed (e.g., daily, monthly,
            annually)
          maxLength: 100
        last_tested_date:
          type: string
          format: date
          nullable: true
        last_test_result:
          oneOf:
          - $ref: '#/components/schemas/LastTestResultEnum'
          - $ref: '#/components/schemas/BlankEnum'
        effectiveness_rating:
          description: |-
            Current effectiveness assessment

            * `not_effective` - Not Effective
            * `partially_effective` - Partially Effective
            * `largely_effective` - Largely Effective
            * `fully_effective` - Fully Effective
          oneOf:
          - $ref: '#/components/schemas/EffectivenessRatingEnum'
          - $ref: '#/components/schemas/BlankEnum'
        evidence_requirements:
          type: string
          description: What evidence is needed to demonstrate this control's effectiveness
        documentation_links:
          type: object
          additionalProperties: {}
          description: Links to related policies, procedures, and documentation
        risk_rating:
          description: |-
            Risk level if this control fails

            * `low` - Low
            * `medium` - Medium
            * `high` - High
            * `critical` - Critical
          oneOf:
          - $ref: '#/components/schemas/UrgencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        remediation_plan:
          type: string
          description: Plan for addressing control deficiencies
        version:
          type: string
          maxLength: 20
      required:
      - clauses
      - control_id
      - control_type
      - description
      - name
    ControlCreateUpdateRequest:
      type: object
      description: Serializer for creating and updating controls.
      properties:
        control_id:
          type: string
          minLength: 1
          description: Unique control identifier
          pattern: ^[A-Z0-9][A-Z0-9\-\.]*$
          maxLength: 50
        name:
          type: string
          minLength: 1
          description: Control name or title
          maxLength: 200
        description:
          type: string
          minLength: 1
          description: Detailed control description
        clauses:
          type: array
          items:
            type: integer
          description: Framework clauses this control addresses
        control_type:
          $ref: '#/components/schemas/ControlTypeEnum'
        automation_level:
          $ref: '#/components/schemas/AutomationLevelEnum'
        status:
          $ref: '#/components/schemas/Status9ffEnum'
        control_owner:
          type: integer
          nullable: true
          description: Person responsible for this control
        business_owner:
          type: string
          description: Business unit or department responsible
          maxLength: 200
        implementation_details:
          type: string
          description: Specific implementation steps and procedures
        frequency:
          type: string
          description: How often this control is performed (e.g., daily, monthly,
            annually)
          maxLength: 100
        last_tested_date:
          type: string
          format: date
          nullable: true
        last_test_result:
          oneOf:
          - $ref: '#/components/schemas/LastTestResultEnum'
          - $ref: '#/components/schemas/BlankEnum'
        effectiveness_rating:
          description: |-
            Current effectiveness assessment

            * `not_effective` - Not Effective
            * `partially_effective` - Partially Effective
            * `largely_effective` - Largely Effective
            * `fully_effective` - Fully Effective
          oneOf:
          - $ref: '#/components/schemas/EffectivenessRatingEnum'
          - $ref: '#/components/schemas/BlankEnum'
        evidence_requirements:
          type: string
          description: What evidence is needed to demonstrate this control's effectiveness
        documentation_links:
          type: object
          additionalProperties: {}
          description: Links to related policies, procedures, and documentation
        risk_rating:
          description: |-
            Risk level if this control fails

            * `low` - Low
            * `medium` - Medium
            * `high` - High
            * `critical` - Critical
          oneOf:
          - $ref: '#/components/schemas/UrgencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        remediation_plan:
          type: string
          description: Plan for addressing control deficiencies
        version:
          type: string
          minLength: 1
          maxLength: 20
      required:
      - clauses
      - control_id
      - control_type
      - description
      - name
    ControlDetail:
      type: object
      description: Detailed control serializer with full information.
      properties:
        id:
          type: integer
          readOnly: true
        control_id:
          type: string
          description: Unique control identifier
          pattern: ^[A-Z0-9][A-Z0-9\-\.]*$
          maxLength: 50
        name:
          type: string
          description: Control name or title
          maxLength: 200
        description:
          type: string
          description: Detailed control description
        clauses:
          type: array
          items:
            type: integer
          description: Framework clauses this control addresses
        clauses_detail:
          type: array
          items:
            $ref: '#/components/schemas/ClauseList'
          readOnly: true
        control_type:
          $ref: '#/components/schemas/ControlTypeEnum'
        automation_level:
          $ref: '#/components/schemas/AutomationLevelEnum'
        status:
          $ref: '#/components/schemas/Status9ffEnum'
        control_owner:
          type: integer
          nullable: true
          description: Person responsible for this control
        control_owner_name:
          type: string
          readOnly: true
        business_owner:
          type: string
          description: Business unit or department responsible
          maxLength: 200
        implementation_details:
          type: string
          description: Specific implementation steps and procedures
        frequency:
          type: string
          description: How often this control is performed (e.g., daily, monthly,
            annually)
          maxLength: 100
        last_tested_date:
          type: string
          format: date
          nullable: true
        last_test_result:
          oneOf:
          - $ref: '#/components/schemas/LastTestResultEnum'
          - $ref: '#/components/schemas/BlankEnum'
        effectiveness_rating:
          description: |-
            Current effectiveness assessment

            * `not_effective` - Not Effective
            * `partially_effective` - Partially Effective
            * `largely_effective` - Largely Effective
            * `fully_effective` - Fully Effective
          oneOf:
          - $ref: '#/components/schemas/EffectivenessRatingEnum'
          - $ref: '#/components/schemas/BlankEnum'
        evidence_requirements:
          type: string
          description: What evidence is needed to demonstrate this control's effectiveness
        documentation_links:
          type: object
          additionalProperties: {}
          description: Links to related policies, procedures, and documentation
        risk_rating:
          description: |-
            Risk level if this control fails

            * `low` - Low
            * `medium` - Medium
            * `high` - High
            * `critical` - Critical
          oneOf:
          - $ref: '#/components/schemas/UrgencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        remediation_plan:
          type: string
          description: Plan for addressing control deficiencies
        version:
          type: string
          maxLength: 20
        change_log:
          type: object
          additionalProperties: {}
          description: History of changes to this control
        is_active:
          type: string
          readOnly: true
        needs_testing:
          type: string
          readOnly: true
        framework_coverage:
          type: string
          readOnly: true
        evidence:
          type: array
          items:
            $ref: '#/components/schemas/ControlEvidence'
          readOnly: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - clauses
      - clauses_detail
      - control_id
      - control_owner_name
      - control_type
      - created_at
      - created_by_username
      - description
      - evidence
      - framework_coverage
      - id
      - is_active
      - name
      - needs_testing
      - updated_at
    ControlDetailRequest:
      type: object
      description: Detailed control serializer with full information.
      properties:
        control_id:
          type: string
          minLength: 1
          description: Unique control identifier
          pattern: ^[A-Z0-9][A-Z0-9\-\.]*$
          maxLength: 50
        name:
          type: string
          minLength: 1
          description: Control name or title
          maxLength: 200
        description:
          type: string
          minLength: 1
          description: Detailed control description
        clauses:
          type: array
          items:
            type: integer
          description: Framework clauses this control addresses
        control_type:
          $ref: '#/components/schemas/ControlTypeEnum'
        automation_level:
          $ref: '#/components/schemas/AutomationLevelEnum'
        status:
          $ref: '#/components/schemas/Status9ffEnum'
        control_owner:
          type: integer
          nullable: true
          description: Person responsible for this control
        business_owner:
          type: string
          description: Business unit or department responsible
          maxLength: 200
        implementation_details:
          type: string
          description: Specific implementation steps and procedures
        frequency:
          type: string
          description: How often this control is performed (e.g., daily, monthly,
            annually)
          maxLength: 100
        last_tested_date:
          type: string
          format: date
          nullable: true
        last_test_result:
          oneOf:
          - $ref: '#/components/schemas/LastTestResultEnum'
          - $ref: '#/components/schemas/BlankEnum'
        effectiveness_rating:
          description: |-
            Current effectiveness assessment

            * `not_effective` - Not Effective
            * `partially_effective` - Partially Effective
            * `largely_effective` - Largely Effective
            * `fully_effective` - Fully Effective
          oneOf:
          - $ref: '#/components/schemas/EffectivenessRatingEnum'
          - $ref: '#/components/schemas/BlankEnum'
        evidence_requirements:
          type: string
          description: What evidence is needed to demonstrate this control's effectiveness
        documentation_links:
          type: object
          additionalProperties: {}
          description: Links to related policies, procedures, and documentation
        risk_rating:
          description: |-
            Risk level if this control fails

            * `low` - Low
            * `medium` - Medium
            * `high` - High
            * `critical` - Critical
          oneOf:
          - $ref: '#/components/schemas/UrgencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        remediation_plan:
          type: string
          description: Plan for addressing control deficiencies
        version:
          type: string
          minLength: 1
          maxLength: 20
        change_log:
          type: object
          additionalProperties: {}
          description: History of changes to this control
      required:
      - clauses
      - control_id
      - control_type
      - description
      - name
    ControlEvidence:
      type: object
      description: Serializer for control evidence.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          description: Evidence title or description
          maxLength: 200
        evidence_type:
          $ref: '#/components/schemas/EvidenceTypeEnum'
        description:
          type: string
          description: Additional evidence description
        document:
          type: integer
          nullable: true
          description: Associated document file
        document_url:
          type: string
          readOnly: true
        document_name:
          type: string
          readOnly: true
        external_url:
          type: string
          format: uri
          nullable: true
          description: External URL for evidence (e.g., system screenshot)
          maxLength: 200
        evidence_date:
          type: string
          format: date
          description: Date when evidence was created or collected
        collected_by:
          type: integer
          nullable: true
          description: Person who collected this evidence
        collected_by_username:
          type: string
          readOnly: true
        is_validated:
          type: boolean
          description: Whether evidence has been validated
        validated_by:
          type: integer
          nullable: true
          description: Person who validated this evidence
        validated_by_username:
          type: string
          readOnly: true
        validated_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        validation_notes:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - collected_by_username
      - created_at
      - document_name
      - document_url
      - evidence_type
      - id
      - title
      - updated_at
      - validated_at
      - validated_by_username
    ControlEvidenceRequest:
      type: object
      description: Serializer for control evidence.
      properties:
        title:
          type: string
          minLength: 1
          description: Evidence title or description
          maxLength: 200
        evidence_type:
          $ref: '#/components/schemas/EvidenceTypeEnum'
        description:
          type: string
          description: Additional evidence description
        document:
          type: integer
          nullable: true
          description: Associated document file
        external_url:
          type: string
          format: uri
          nullable: true
          description: External URL for evidence (e.g., system screenshot)
          maxLength: 200
        evidence_date:
          type: string
          format: date
          description: Date when evidence was created or collected
        collected_by:
          type: integer
          nullable: true
          description: Person who collected this evidence
        is_validated:
          type: boolean
          description: Whether evidence has been validated
        validated_by:
          type: integer
          nullable: true
          description: Person who validated this evidence
        validation_notes:
          type: string
      required:
      - evidence_type
      - title
    ControlList:
      type: object
      description: Lightweight serializer for control listings.
      properties:
        id:
          type: integer
          readOnly: true
        control_id:
          type: string
          description: Unique control identifier
          pattern: ^[A-Z0-9][A-Z0-9\-\.]*$
          maxLength: 50
        name:
          type: string
          description: Control name or title
          maxLength: 200
        control_type:
          $ref: '#/components/schemas/ControlTypeEnum'
        automation_level:
          $ref: '#/components/schemas/AutomationLevelEnum'
        status:
          $ref: '#/components/schemas/Status9ffEnum'
        control_owner_name:
          type: string
          readOnly: true
        effectiveness_rating:
          description: |-
            Current effectiveness assessment

            * `not_effective` - Not Effective
            * `partially_effective` - Partially Effective
            * `largely_effective` - Largely Effective
            * `fully_effective` - Fully Effective
          oneOf:
          - $ref: '#/components/schemas/EffectivenessRatingEnum'
          - $ref: '#/components/schemas/BlankEnum'
        last_tested_date:
          type: string
          format: date
          nullable: true
        risk_rating:
          description: |-
            Risk level if this control fails

            * `low` - Low
            * `medium` - Medium
            * `high` - High
            * `critical` - Critical
          oneOf:
          - $ref: '#/components/schemas/UrgencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        is_active:
          type: string
          readOnly: true
        needs_testing:
          type: string
          readOnly: true
        framework_coverage:
          type: string
          readOnly: true
        clause_count:
          type: string
          readOnly: true
        version:
          type: string
          maxLength: 20
      required:
      - clause_count
      - control_id
      - control_owner_name
      - control_type
      - framework_coverage
      - id
      - is_active
      - name
      - needs_testing
    ControlListRequest:
      type: object
      description: Lightweight serializer for control listings.
      properties:
        control_id:
          type: string
          minLength: 1
          description: Unique control identifier
          pattern: ^[A-Z0-9][A-Z0-9\-\.]*$
          maxLength: 50
        name:
          type: string
          minLength: 1
          description: Control name or title
          maxLength: 200
        control_type:
          $ref: '#/components/schemas/ControlTypeEnum'
        automation_level:
          $ref: '#/components/schemas/AutomationLevelEnum'
        status:
          $ref: '#/components/schemas/Status9ffEnum'
        effectiveness_rating:
          description: |-
            Current effectiveness assessment

            * `not_effective` - Not Effective
            * `partially_effective` - Partially Effective
            * `largely_effective` - Largely Effective
            * `fully_effective` - Fully Effective
          oneOf:
          - $ref: '#/components/schemas/EffectivenessRatingEnum'
          - $ref: '#/components/schemas/BlankEnum'
        last_tested_date:
          type: string
          format: date
          nullable: true
        risk_rating:
          description: |-
            Risk level if this control fails

            * `low` - Low
            * `medium` - Medium
            * `high` - High
            * `critical` - Critical
          oneOf:
          - $ref: '#/components/schemas/UrgencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        version:
          type: string
          minLength: 1
          maxLength: 20
      required:
      - control_id
      - control_type
      - name
    ControlTypeEnum:
      enum:
      - preventive
      - detective
      - corrective
      - compensating
      - administrative
      - technical
      - physical
      type: string
      description: |-
        * `preventive` - Preventive Control
        * `detective` - Detective Control
        * `corrective` - Corrective Control
        * `compensating` - Compensating Control
        * `administrative` - Administrative Control
        * `technical` - Technical Control
        * `physical` - Physical Control
    DefaultApplicabilityEnum:
      enum:
      - applicable
      - not_applicable
      - to_be_determined
      type: string
      description: |-
        * `applicable` - Applicable
        * `not_applicable` - Not Applicable
        * `to_be_determined` - To Be Determined
    Document:
      type: object
      description: Serializer for document uploads with file validation and metadata.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        file:
          type: string
          format: uri
          description: Upload documents (PDF, DOC, XLS, etc.)
        file_url:
          type: string
          readOnly: true
        file_name:
          type: string
          readOnly: true
        uploaded_by:
          type: string
          readOnly: true
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        file_size:
          type: integer
          readOnly: true
          nullable: true
          description: File size in bytes
        mime_type:
          type: string
          maxLength: 100
        is_public:
          type: boolean
          description: Whether file can be accessed without authentication
      required:
      - file
      - file_name
      - file_size
      - file_url
      - id
      - title
      - updated_at
      - uploaded_at
      - uploaded_by
    DocumentList:
      type: object
      description: Simplified serializer for document listings.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        file_name:
          type: string
          readOnly: true
        uploaded_by:
          type: string
          readOnly: true
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        file_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: File size in bytes
        is_public:
          type: boolean
          description: Whether file can be accessed without authentication
      required:
      - file_name
      - id
      - title
      - uploaded_at
      - uploaded_by
    DocumentRequest:
      type: object
      description: Serializer for document uploads with file validation and metadata.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        file:
          type: string
          format: binary
          description: Upload documents (PDF, DOC, XLS, etc.)
        mime_type:
          type: string
          maxLength: 100
        is_public:
          type: boolean
          description: Whether file can be accessed without authentication
      required:
      - file
      - title
    EffectivenessRatingEnum:
      enum:
      - not_effective
      - partially_effective
      - largely_effective
      - fully_effective
      type: string
      description: |-
        * `not_effective` - Not Effective
        * `partially_effective` - Partially Effective
        * `largely_effective` - Largely Effective
        * `fully_effective` - Fully Effective
    EvidenceTypeEnum:
      enum:
      - document
      - screenshot
      - log_file
      - report
      - certificate
      - approval
      - test_result
      - meeting_notes
      - other
      type: string
      description: |-
        * `document` - Document/Policy
        * `screenshot` - Screenshot
        * `log_file` - Log File
        * `report` - Report
        * `certificate` - Certificate
        * `approval` - Approval/Sign-off
        * `test_result` - Test Result
        * `meeting_notes` - Meeting Notes
        * `other` - Other
    FrameworkDetail:
      type: object
      description: Detailed framework serializer with full information.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Framework name (e.g., SOC 2 Type II)
          maxLength: 200
        short_name:
          type: string
          description: Short identifier (e.g., SOC2)
          maxLength: 50
        version:
          type: string
          default: '1.0'
          description: Framework version
          maxLength: 50
        description:
          type: string
          description: Framework description and purpose
        framework_type:
          $ref: '#/components/schemas/FrameworkTypeEnum'
        external_id:
          type: string
          nullable: true
          description: External framework identifier or reference code
          maxLength: 100
        issuing_organization:
          type: string
          description: Organization that issued/maintains this framework
          maxLength: 200
        official_url:
          type: string
          format: uri
          nullable: true
          description: Official framework documentation URL
          maxLength: 200
        effective_date:
          type: string
          format: date
          description: Date when this version became effective
        expiry_date:
          type: string
          format: date
          nullable: true
          description: Date when this version expires
        status:
          $ref: '#/components/schemas/StatusB25Enum'
        is_mandatory:
          type: boolean
          description: Whether compliance with this framework is mandatory for the
            organization
        clause_count:
          type: string
          readOnly: true
        control_count:
          type: string
          readOnly: true
        is_active:
          type: string
          readOnly: true
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        imported_from:
          type: string
          readOnly: true
          description: Source of framework import (file, API, manual entry)
        import_checksum:
          type: string
          readOnly: true
          description: Checksum for tracking changes in imported frameworks
      required:
      - clause_count
      - control_count
      - created_at
      - created_by_username
      - description
      - effective_date
      - id
      - import_checksum
      - imported_from
      - is_active
      - issuing_organization
      - name
      - short_name
      - updated_at
    FrameworkDetailRequest:
      type: object
      description: Detailed framework serializer with full information.
      properties:
        name:
          type: string
          minLength: 1
          description: Framework name (e.g., SOC 2 Type II)
          maxLength: 200
        short_name:
          type: string
          minLength: 1
          description: Short identifier (e.g., SOC2)
          maxLength: 50
        version:
          type: string
          minLength: 1
          default: '1.0'
          description: Framework version
          maxLength: 50
        description:
          type: string
          minLength: 1
          description: Framework description and purpose
        framework_type:
          $ref: '#/components/schemas/FrameworkTypeEnum'
        external_id:
          type: string
          nullable: true
          description: External framework identifier or reference code
          maxLength: 100
        issuing_organization:
          type: string
          minLength: 1
          description: Organization that issued/maintains this framework
          maxLength: 200
        official_url:
          type: string
          format: uri
          nullable: true
          description: Official framework documentation URL
          maxLength: 200
        effective_date:
          type: string
          format: date
          description: Date when this version became effective
        expiry_date:
          type: string
          format: date
          nullable: true
          description: Date when this version expires
        status:
          $ref: '#/components/schemas/StatusB25Enum'
        is_mandatory:
          type: boolean
          description: Whether compliance with this framework is mandatory for the
            organization
      required:
      - description
      - effective_date
      - issuing_organization
      - name
      - short_name
    FrameworkList:
      type: object
      description: Lightweight serializer for framework listings.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Framework name (e.g., SOC 2 Type II)
          maxLength: 200
        short_name:
          type: string
          description: Short identifier (e.g., SOC2)
          maxLength: 50
        version:
          type: string
          default: '1.0'
          description: Framework version
          maxLength: 50
        framework_type:
          $ref: '#/components/schemas/FrameworkTypeEnum'
        status:
          $ref: '#/components/schemas/StatusB25Enum'
        is_mandatory:
          type: boolean
          description: Whether compliance with this framework is mandatory for the
            organization
        effective_date:
          type: string
          format: date
          description: Date when this version became effective
        clause_count:
          type: string
          readOnly: true
        control_count:
          type: string
          readOnly: true
        is_active:
          type: string
          readOnly: true
        issuing_organization:
          type: string
          description: Organization that issued/maintains this framework
          maxLength: 200
      required:
      - clause_count
      - control_count
      - effective_date
      - id
      - is_active
      - issuing_organization
      - name
      - short_name
    FrameworkMapping:
      type: object
      description: Serializer for framework mappings.
      properties:
        id:
          type: integer
          readOnly: true
        source_clause:
          type: integer
        source_clause_display:
          type: string
          readOnly: true
        target_clause:
          type: integer
        target_clause_display:
          type: string
          readOnly: true
        mapping_type:
          $ref: '#/components/schemas/MappingTypeEnum'
        mapping_rationale:
          type: string
          description: Explanation of why these clauses are mapped together
        confidence_level:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Confidence percentage (0-100) in this mapping
        created_by_username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        verified_by_username:
          type: string
          readOnly: true
        verified_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - created_at
      - created_by_username
      - id
      - mapping_type
      - source_clause
      - source_clause_display
      - target_clause
      - target_clause_display
      - verified_at
      - verified_by_username
    FrameworkMappingRequest:
      type: object
      description: Serializer for framework mappings.
      properties:
        source_clause:
          type: integer
        target_clause:
          type: integer
        mapping_type:
          $ref: '#/components/schemas/MappingTypeEnum'
        mapping_rationale:
          type: string
          description: Explanation of why these clauses are mapped together
        confidence_level:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Confidence percentage (0-100) in this mapping
      required:
      - mapping_type
      - source_clause
      - target_clause
    FrameworkTypeEnum:
      enum:
      - security
      - privacy
      - financial
      - operational
      - industry
      - custom
      type: string
      description: |-
        * `security` - Security Framework
        * `privacy` - Privacy Framework
        * `financial` - Financial Framework
        * `operational` - Operational Framework
        * `industry` - Industry-Specific Framework
        * `custom` - Custom Framework
    ImplementationStatusEnum:
      enum:
      - not_implemented
      - partially_implemented
      - implemented
      - not_applicable
      type: string
      description: |-
        * `not_implemented` - Not Implemented
        * `partially_implemented` - Partially Implemented
        * `implemented` - Implemented
        * `not_applicable` - Not Applicable
    LastTestResultEnum:
      enum:
      - not_effective
      - partially_effective
      - largely_effective
      - fully_effective
      type: string
      description: |-
        * `not_effective` - Not Effective
        * `partially_effective` - Partially Effective
        * `largely_effective` - Largely Effective
        * `fully_effective` - Fully Effective
    LimitOverrideCreate:
      type: object
      description: Serializer for creating new limit override requests.
      properties:
        limit_type:
          $ref: '#/components/schemas/LimitTypeEnum'
        requested_limit:
          type: integer
          maximum: 2147483647
          minimum: 0
        business_justification:
          type: string
          description: Explain why this limit increase is needed
        urgency:
          $ref: '#/components/schemas/UrgencyEnum'
        temporary:
          type: boolean
          description: Is this a temporary increase?
        expires_at:
          type: string
          format: date-time
          nullable: true
          description: When should temporary limits expire?
      required:
      - business_justification
      - limit_type
      - requested_limit
    LimitOverrideCreateRequest:
      type: object
      description: Serializer for creating new limit override requests.
      properties:
        limit_type:
          $ref: '#/components/schemas/LimitTypeEnum'
        requested_limit:
          type: integer
          maximum: 2147483647
          minimum: 0
        business_justification:
          type: string
          minLength: 1
          description: Explain why this limit increase is needed
        urgency:
          $ref: '#/components/schemas/UrgencyEnum'
        temporary:
          type: boolean
          description: Is this a temporary increase?
        expires_at:
          type: string
          format: date-time
          nullable: true
          description: When should temporary limits expire?
      required:
      - business_justification
      - limit_type
      - requested_limit
    LimitOverrideRequest:
      type: object
      description: Serializer for viewing limit override requests.
      properties:
        id:
          type: integer
          readOnly: true
        tenant_name:
          type: string
          readOnly: true
        plan_name:
          type: string
          readOnly: true
        limit_type:
          $ref: '#/components/schemas/LimitTypeEnum'
        limit_type_display:
          type: string
          readOnly: true
        current_limit:
          type: integer
          maximum: 2147483647
          minimum: 0
        requested_limit:
          type: integer
          maximum: 2147483647
          minimum: 0
        business_justification:
          type: string
          description: Explain why this limit increase is needed
        urgency:
          $ref: '#/components/schemas/UrgencyEnum'
        urgency_display:
          type: string
          readOnly: true
        temporary:
          type: boolean
          description: Is this a temporary increase?
        expires_at:
          type: string
          format: date-time
          nullable: true
          description: When should temporary limits expire?
        status:
          $ref: '#/components/schemas/Status7d3Enum'
        status_display:
          type: string
          readOnly: true
        requested_by:
          type: string
          readOnly: true
          description: User who requested the override
        requested_at:
          type: string
          format: date-time
          readOnly: true
        first_approver:
          type: string
          readOnly: true
          nullable: true
        first_approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        first_approval_notes:
          type: string
        second_approver:
          type: string
          readOnly: true
          nullable: true
        second_approved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        second_approval_notes:
          type: string
        final_decision_by:
          type: string
          readOnly: true
          nullable: true
        final_decision_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        rejection_reason:
          type: string
        applied_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        applied_by:
          type: string
          readOnly: true
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        needs_first_approval:
          type: boolean
          readOnly: true
        needs_second_approval:
          type: boolean
          readOnly: true
        is_fully_approved:
          type: boolean
          readOnly: true
        can_be_applied:
          type: boolean
          readOnly: true
      required:
      - applied_at
      - applied_by
      - business_justification
      - can_be_applied
      - created_at
      - current_limit
      - final_decision_at
      - final_decision_by
      - first_approved_at
      - first_approver
      - id
      - is_fully_approved
      - limit_type
      - limit_type_display
      - needs_first_approval
      - needs_second_approval
      - plan_name
      - requested_at
      - requested_by
      - requested_limit
      - second_approved_at
      - second_approver
      - status_display
      - tenant_name
      - updated_at
      - urgency_display
    LimitOverrideRequestRequest:
      type: object
      description: Serializer for viewing limit override requests.
      properties:
        limit_type:
          $ref: '#/components/schemas/LimitTypeEnum'
        current_limit:
          type: integer
          maximum: 2147483647
          minimum: 0
        requested_limit:
          type: integer
          maximum: 2147483647
          minimum: 0
        business_justification:
          type: string
          minLength: 1
          description: Explain why this limit increase is needed
        urgency:
          $ref: '#/components/schemas/UrgencyEnum'
        temporary:
          type: boolean
          description: Is this a temporary increase?
        expires_at:
          type: string
          format: date-time
          nullable: true
          description: When should temporary limits expire?
        status:
          $ref: '#/components/schemas/Status7d3Enum'
        first_approval_notes:
          type: string
        second_approval_notes:
          type: string
        rejection_reason:
          type: string
      required:
      - business_justification
      - current_limit
      - limit_type
      - requested_limit
    LimitTypeEnum:
      enum:
      - max_users
      - max_documents
      - max_frameworks
      - max_storage_gb
      type: string
      description: |-
        * `max_users` - Maximum Users
        * `max_documents` - Maximum Documents
        * `max_frameworks` - Maximum Frameworks
        * `max_storage_gb` - Maximum Storage (GB)
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
      required:
      - password
      - username
    MappingTypeEnum:
      enum:
      - equivalent
      - partial
      - supports
      - related
      type: string
      description: |-
        * `equivalent` - Equivalent Requirements
        * `partial` - Partially Overlapping
        * `supports` - Supporting Requirement
        * `related` - Related Requirement
    MaturityLevelEnum:
      enum:
      - ad_hoc
      - repeatable
      - defined
      - managed
      - optimized
      type: string
      description: |-
        * `ad_hoc` - Ad Hoc
        * `repeatable` - Repeatable
        * `defined` - Defined
        * `managed` - Managed
        * `optimized` - Optimized
    PatchedAssessmentEvidenceRequest:
      type: object
      description: Serializer for assessment evidence links.
      properties:
        assessment:
          type: integer
        evidence:
          type: integer
        evidence_purpose:
          type: string
          description: Purpose of this evidence for the assessment
          maxLength: 100
        is_primary_evidence:
          type: boolean
          description: Whether this is primary evidence for the assessment
    PatchedAssessmentReportRequest:
      type: object
      description: Serializer for AssessmentReport model.
      properties:
        report_type:
          $ref: '#/components/schemas/ReportTypeEnum'
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        framework:
          type: integer
          nullable: true
          description: Framework to generate report for (if applicable)
        include_evidence_summary:
          type: boolean
        include_implementation_notes:
          type: boolean
        include_overdue_items:
          type: boolean
        include_charts:
          type: boolean
    PatchedClauseDetailRequest:
      type: object
      description: Detailed clause serializer with full information.
      properties:
        framework:
          type: integer
        clause_id:
          type: string
          minLength: 1
          description: Framework-specific clause identifier (e.g., CC6.1, A.8.2.1)
          maxLength: 50
        title:
          type: string
          minLength: 1
          description: Clause title or heading
          maxLength: 300
        description:
          type: string
          minLength: 1
          description: Full clause text and requirements
        parent_clause:
          type: integer
          nullable: true
          description: Parent clause for hierarchical organization
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order within framework
        clause_type:
          $ref: '#/components/schemas/ClauseTypeEnum'
        criticality:
          $ref: '#/components/schemas/UrgencyEnum'
        is_testable:
          type: boolean
          description: Whether this clause can be tested/audited
        implementation_guidance:
          type: string
          description: Guidance on how to implement this clause
        testing_procedures:
          type: string
          description: Procedures for testing compliance with this clause
        external_references:
          type: object
          additionalProperties: {}
          description: References to other standards, regulations, or frameworks
    PatchedControlAssessmentCreateUpdateRequest:
      type: object
      description: Serializer for creating and updating assessments.
      properties:
        control:
          type: integer
          description: The control being assessed
        applicability:
          allOf:
          - $ref: '#/components/schemas/ApplicabilityEnum'
          description: |-
            Whether this control applies to the organization

            * `applicable` - Applicable
            * `not_applicable` - Not Applicable
            * `to_be_determined` - To Be Determined
        applicability_rationale:
          type: string
          description: Explanation of why the control is/isn't applicable
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            Current assessment status

            * `not_started` - Not Started
            * `pending` - Pending
            * `in_progress` - In Progress
            * `under_review` - Under Review
            * `complete` - Complete
            * `not_applicable` - Not Applicable
            * `deferred` - Deferred
        implementation_status:
          allOf:
          - $ref: '#/components/schemas/ImplementationStatusEnum'
          description: |-
            Current implementation status of the control

            * `not_implemented` - Not Implemented
            * `partially_implemented` - Partially Implemented
            * `implemented` - Implemented
            * `not_applicable` - Not Applicable
        assigned_to:
          type: integer
          nullable: true
          description: Person responsible for completing this assessment
        reviewer:
          type: integer
          nullable: true
          description: Person responsible for reviewing this assessment
        due_date:
          type: string
          format: date
          nullable: true
          description: Target completion date for this assessment
        current_state_description:
          type: string
          description: Description of the current state of control implementation
        target_state_description:
          type: string
          description: Description of the desired future state
        gap_analysis:
          type: string
          description: Analysis of gaps between current and target state
        implementation_approach:
          type: string
          description: Planned or implemented approach for addressing this control
        maturity_level:
          description: |-
            Current maturity level of control implementation

            * `ad_hoc` - Ad Hoc
            * `repeatable` - Repeatable
            * `defined` - Defined
            * `managed` - Managed
            * `optimized` - Optimized
          oneOf:
          - $ref: '#/components/schemas/MaturityLevelEnum'
          - $ref: '#/components/schemas/BlankEnum'
        risk_rating:
          description: |-
            Risk level if this control is not properly implemented

            * `low` - Low
            * `medium` - Medium
            * `high` - High
            * `critical` - Critical
          oneOf:
          - $ref: '#/components/schemas/UrgencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        compliance_score:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Compliance score (0-100) for this control
        assessment_notes:
          type: string
          description: General notes and observations about this assessment
        reviewer_comments:
          type: string
          description: Comments from the reviewer
        remediation_plan:
          type: string
          description: Plan for addressing gaps and improving control implementation
        remediation_due_date:
          type: string
          format: date
          nullable: true
          description: Target date for completing remediation activities
        remediation_owner:
          type: integer
          nullable: true
          description: Person responsible for remediation activities
    PatchedControlCreateUpdateRequest:
      type: object
      description: Serializer for creating and updating controls.
      properties:
        control_id:
          type: string
          minLength: 1
          description: Unique control identifier
          pattern: ^[A-Z0-9][A-Z0-9\-\.]*$
          maxLength: 50
        name:
          type: string
          minLength: 1
          description: Control name or title
          maxLength: 200
        description:
          type: string
          minLength: 1
          description: Detailed control description
        clauses:
          type: array
          items:
            type: integer
          description: Framework clauses this control addresses
        control_type:
          $ref: '#/components/schemas/ControlTypeEnum'
        automation_level:
          $ref: '#/components/schemas/AutomationLevelEnum'
        status:
          $ref: '#/components/schemas/Status9ffEnum'
        control_owner:
          type: integer
          nullable: true
          description: Person responsible for this control
        business_owner:
          type: string
          description: Business unit or department responsible
          maxLength: 200
        implementation_details:
          type: string
          description: Specific implementation steps and procedures
        frequency:
          type: string
          description: How often this control is performed (e.g., daily, monthly,
            annually)
          maxLength: 100
        last_tested_date:
          type: string
          format: date
          nullable: true
        last_test_result:
          oneOf:
          - $ref: '#/components/schemas/LastTestResultEnum'
          - $ref: '#/components/schemas/BlankEnum'
        effectiveness_rating:
          description: |-
            Current effectiveness assessment

            * `not_effective` - Not Effective
            * `partially_effective` - Partially Effective
            * `largely_effective` - Largely Effective
            * `fully_effective` - Fully Effective
          oneOf:
          - $ref: '#/components/schemas/EffectivenessRatingEnum'
          - $ref: '#/components/schemas/BlankEnum'
        evidence_requirements:
          type: string
          description: What evidence is needed to demonstrate this control's effectiveness
        documentation_links:
          type: object
          additionalProperties: {}
          description: Links to related policies, procedures, and documentation
        risk_rating:
          description: |-
            Risk level if this control fails

            * `low` - Low
            * `medium` - Medium
            * `high` - High
            * `critical` - Critical
          oneOf:
          - $ref: '#/components/schemas/UrgencyEnum'
          - $ref: '#/components/schemas/BlankEnum'
        remediation_plan:
          type: string
          description: Plan for addressing control deficiencies
        version:
          type: string
          minLength: 1
          maxLength: 20
    PatchedControlEvidenceRequest:
      type: object
      description: Serializer for control evidence.
      properties:
        title:
          type: string
          minLength: 1
          description: Evidence title or description
          maxLength: 200
        evidence_type:
          $ref: '#/components/schemas/EvidenceTypeEnum'
        description:
          type: string
          description: Additional evidence description
        document:
          type: integer
          nullable: true
          description: Associated document file
        external_url:
          type: string
          format: uri
          nullable: true
          description: External URL for evidence (e.g., system screenshot)
          maxLength: 200
        evidence_date:
          type: string
          format: date
          description: Date when evidence was created or collected
        collected_by:
          type: integer
          nullable: true
          description: Person who collected this evidence
        is_validated:
          type: boolean
          description: Whether evidence has been validated
        validated_by:
          type: integer
          nullable: true
          description: Person who validated this evidence
        validation_notes:
          type: string
    PatchedDocumentRequest:
      type: object
      description: Serializer for document uploads with file validation and metadata.
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
        file:
          type: string
          format: binary
          description: Upload documents (PDF, DOC, XLS, etc.)
        mime_type:
          type: string
          maxLength: 100
        is_public:
          type: boolean
          description: Whether file can be accessed without authentication
    PatchedFrameworkDetailRequest:
      type: object
      description: Detailed framework serializer with full information.
      properties:
        name:
          type: string
          minLength: 1
          description: Framework name (e.g., SOC 2 Type II)
          maxLength: 200
        short_name:
          type: string
          minLength: 1
          description: Short identifier (e.g., SOC2)
          maxLength: 50
        version:
          type: string
          minLength: 1
          default: '1.0'
          description: Framework version
          maxLength: 50
        description:
          type: string
          minLength: 1
          description: Framework description and purpose
        framework_type:
          $ref: '#/components/schemas/FrameworkTypeEnum'
        external_id:
          type: string
          nullable: true
          description: External framework identifier or reference code
          maxLength: 100
        issuing_organization:
          type: string
          minLength: 1
          description: Organization that issued/maintains this framework
          maxLength: 200
        official_url:
          type: string
          format: uri
          nullable: true
          description: Official framework documentation URL
          maxLength: 200
        effective_date:
          type: string
          format: date
          description: Date when this version became effective
        expiry_date:
          type: string
          format: date
          nullable: true
          description: Date when this version expires
        status:
          $ref: '#/components/schemas/StatusB25Enum'
        is_mandatory:
          type: boolean
          description: Whether compliance with this framework is mandatory for the
            organization
    PatchedFrameworkMappingRequest:
      type: object
      description: Serializer for framework mappings.
      properties:
        source_clause:
          type: integer
        target_clause:
          type: integer
        mapping_type:
          $ref: '#/components/schemas/MappingTypeEnum'
        mapping_rationale:
          type: string
          description: Explanation of why these clauses are mapped together
        confidence_level:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: Confidence percentage (0-100) in this mapping
    PatchedLimitOverrideRequestRequest:
      type: object
      description: Serializer for viewing limit override requests.
      properties:
        limit_type:
          $ref: '#/components/schemas/LimitTypeEnum'
        current_limit:
          type: integer
          maximum: 2147483647
          minimum: 0
        requested_limit:
          type: integer
          maximum: 2147483647
          minimum: 0
        business_justification:
          type: string
          minLength: 1
          description: Explain why this limit increase is needed
        urgency:
          $ref: '#/components/schemas/UrgencyEnum'
        temporary:
          type: boolean
          description: Is this a temporary increase?
        expires_at:
          type: string
          format: date-time
          nullable: true
          description: When should temporary limits expire?
        status:
          $ref: '#/components/schemas/Status7d3Enum'
        first_approval_notes:
          type: string
        second_approval_notes:
          type: string
        rejection_reason:
          type: string
    Plan:
      type: object
      description: Serializer for subscription plans.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        price_monthly:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        max_users:
          type: integer
          maximum: 2147483647
          minimum: 0
        max_documents:
          type: integer
          maximum: 2147483647
          minimum: 0
        max_frameworks:
          type: integer
          maximum: 2147483647
          minimum: 0
        has_api_access:
          type: boolean
        has_advanced_reporting:
          type: boolean
        has_priority_support:
          type: boolean
      required:
      - id
      - name
      - slug
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
          minLength: 1
        password_confirm:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - password_confirm
      - username
    ReportTypeEnum:
      enum:
      - assessment_summary
      - detailed_assessment
      - evidence_portfolio
      - compliance_gap
      type: string
      description: |-
        * `assessment_summary` - Assessment Summary Report
        * `detailed_assessment` - Detailed Assessment Report
        * `evidence_portfolio` - Evidence Portfolio Report
        * `compliance_gap` - Compliance Gap Analysis
    Status7d3Enum:
      enum:
      - pending
      - approved
      - rejected
      - applied
      - expired
      type: string
      description: |-
        * `pending` - Pending Review
        * `approved` - Approved
        * `rejected` - Rejected
        * `applied` - Applied
        * `expired` - Expired
    Status9ffEnum:
      enum:
      - planned
      - in_progress
      - implemented
      - testing
      - active
      - remediation
      - disabled
      - retired
      type: string
      description: |-
        * `planned` - Planned
        * `in_progress` - In Progress
        * `implemented` - Implemented
        * `testing` - Under Testing
        * `active` - Active
        * `remediation` - Needs Remediation
        * `disabled` - Disabled
        * `retired` - Retired
    StatusB25Enum:
      enum:
      - draft
      - active
      - deprecated
      - archived
      type: string
      description: |-
        * `draft` - Draft
        * `active` - Active
        * `deprecated` - Deprecated
        * `archived` - Archived
    StatusEnum:
      enum:
      - not_started
      - pending
      - in_progress
      - under_review
      - complete
      - not_applicable
      - deferred
      type: string
      description: |-
        * `not_started` - Not Started
        * `pending` - Pending
        * `in_progress` - In Progress
        * `under_review` - Under Review
        * `complete` - Complete
        * `not_applicable` - Not Applicable
        * `deferred` - Deferred
    Subscription:
      type: object
      description: Serializer for subscriptions.
      properties:
        id:
          type: integer
          readOnly: true
        plan:
          allOf:
          - $ref: '#/components/schemas/Plan'
          readOnly: true
        status:
          $ref: '#/components/schemas/SubscriptionStatusEnum'
        effective_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
        current_period_start:
          type: string
          format: date-time
          nullable: true
        current_period_end:
          type: string
          format: date-time
          nullable: true
        trial_start:
          type: string
          format: date-time
          nullable: true
        trial_end:
          type: string
          format: date-time
          nullable: true
        seats_included:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_grandfathered:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - effective_price
      - id
      - is_active
      - plan
      - updated_at
    SubscriptionStatusEnum:
      enum:
      - active
      - past_due
      - canceled
      - unpaid
      - trialing
      - incomplete
      type: string
      description: |-
        * `active` - Active
        * `past_due` - Past Due
        * `canceled` - Canceled
        * `unpaid` - Unpaid
        * `trialing` - Trialing
        * `incomplete` - Incomplete
    UrgencyEnum:
      enum:
      - low
      - medium
      - high
      - critical
      type: string
      description: |-
        * `low` - Low
        * `medium` - Medium
        * `high` - High
        * `critical` - Critical
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_joined
      - id
      - username
    VerifyOTPRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
        otp_code:
          type: string
          minLength: 6
          maxLength: 6
      required:
      - otp_code
      - username
  securitySchemes:
    SessionAuth:
      type: apiKey
      in: cookie
      name: sessionid
      description: Django session authentication
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
tags:
- name: Authentication
  description: User authentication and session management
- name: Frameworks
  description: Compliance framework management (ISO 27001, NIST CSF, SOC 2, etc.)
- name: Clauses
  description: Framework clause management and hierarchy
- name: Controls
  description: Control definition and management
- name: Assessments
  description: Control assessment workflow and lifecycle management
- name: Evidence
  description: Evidence collection, management, and linking
- name: Reports
  description: Assessment reporting and PDF generation
- name: Documents
  description: File upload and document management
- name: Billing
  description: Subscription and billing management
